{"version":3,"file":"ExcelUploadTemplateManage-Da6_s9rX.js","sources":["../../src/pages/oper/ExcelUploadTemplateManage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport useStore from \"../../store/store\";\nimport { hasPermission } from \"../../utils/authUtils\";\nimport MainSearch from \"../../components/main/MainSearch\";\nimport TableSearch from \"../../components/table/TableSearch\";\nimport { createTable } from \"../../utils/tableConfig\";\nimport { initialFilters } from \"../../utils/tableEvent\";\nimport { handleDownloadExcel } from \"../../utils/tableExcel\";\nimport styles from \"../../components/table/TableSearch.module.css\";\nimport CommonPopup from \"../../components/popup/CommonPopup\";\nimport { fetchData, fetchFileUpload } from \"../../utils/dataUtils\";\nimport common from \"../../utils/common\";\nimport { errorMsgPopup } from \"../../utils/errorMsgPopup\";\nimport { msgPopup } from \"../../utils/msgPopup\";\n\nconst getFieldOptions = (fieldId) => {\n  const optionsMap = {\n    GU: [\n      { value: \"TITLE\", label: \"제목\" },\n    ],\n  };\n  return optionsMap[fieldId] || [];\n};\n\nconst fn_CellText = { editor: \"input\", editable: true };\nconst fn_CellButton = (label, className, onClick) => ({\n  formatter: (cell) => {\n    const button = document.createElement(\"button\");\n    button.className = `btn btn-sm ${className}`;\n    button.innerText = label;\n    button.onclick = () => onClick(cell.getData());\n    return button;\n  },\n});\n\nconst fn_HandleCellEdit = (cell, field, setData, tableInstance) => {\n  const rowId = cell.getRow().getData().FILEID;\n  const newValue = cell.getValue();\n  if (field === \"TITLE\") {\n    const validation = common.validateVarcharLength(newValue, 100, \"제목\");\n    if (!validation.valid) {\n      errorMsgPopup(validation.error);\n      return;\n    }\n  }\n  setTimeout(() => {\n    setData((prevData) =>\n      prevData.map((row) => {\n        if (String(row.FILEID) === String(rowId)) {\n          const updatedRow = { ...row, [field]: newValue };\n          if (updatedRow.isDeleted === \"N\" && updatedRow.isAdded === \"N\") {\n            updatedRow.isChanged = \"Y\";\n          }\n          return updatedRow;\n        }\n        return row;\n      })\n    );\n    if (tableInstance.current) tableInstance.current.redraw();\n  }, 0);\n};\n\nconst ExcelUploadTemplateManage = () => {\n  const { user } = useStore();\n  const tableRef = useRef(null);\n  const tableInstance = useRef(null);\n  const isInitialRender = useRef(true);\n\n  const searchConfig = {\n    areas: [\n      {\n        type: 'search',\n        fields: [\n          { id: 'GU', type: 'select', row: 1, label: '구분', labelVisible: true, options: getFieldOptions('GU'), width: '150px', height: '30px', backgroundColor: '#ffffff', color: '#000000', enabled: true },\n          { id: 'searchText', type: 'text', row: 1, label: '', labelVisible: false, placeholder: '검색값을 입력하세요', maxLength: 100, width: '200px', height: '30px', backgroundColor: '#ffffff', color: '#000000', enabled: true },\n        ]\n      },\n      {\n        type: 'buttons',\n        fields: [\n          { id: 'searchBtn', type: 'button', row: 1, label: '검색', eventType: 'search', width: '80px', height: '30px', backgroundColor: '#00c4b4', color: '#ffffff', enabled: true },\n        ]\n      }\n    ]\n  };\n\n  const filterTableFields = [\n    { id: \"filterSelect\", label: \"\", type: \"select\", options: [{ value: \"\", label: \"선택\" }, { value: \"TITLE\", label: \"제목\" }, { value: \"FILENM\", label: \"파일명\" }]},\n    { id: \"filterText\", label: \"\", type: \"text\", placeholder: \"검색값을 입력하세요\", width: \"200px\" },\n  ];\n\n  const [filters, setFilters] = useState(initialFilters(searchConfig.areas.find((area) => area.type === 'search').fields));\n  const [tableFilters, setTableFilters] = useState(initialFilters(filterTableFields));\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [tableStatus, setTableStatus] = useState(\"initializing\");\n  const [rowCount, setRowCount] = useState(0);\n  const [isSearched, setIsSearched] = useState(false);\n  const [showAddPopup, setShowAddPopup] = useState(false);\n  const [newTemplate, setNewTemplate] = useState({ TITLE: \"\", FILES: [] });\n\n  useEffect(() => {\n    if (!user || !hasPermission(user.auth, \"userAuthManage\")) window.location.href = \"/\";\n  }, [user]);\n\n  useEffect(() => {\n    const initializeTable = async () => {\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      if (!tableRef.current) {\n        console.warn(\"테이블 컨테이너가 준비되지 않았습니다.\");\n        return;\n      }\n      try {\n        tableInstance.current = createTable(tableRef.current, [\n          { \n            frozen: true, \n            headerHozAlign: \"center\", \n            hozAlign: \"center\", \n            title: \"작업\", \n            field: \"actions\", \n            width: 80, \n            visible: true, \n            ...fn_CellButton(\"삭제\", `btn-danger ${styles.deleteButton}`, (rowData) => handleDelete(rowData)) \n          },\n          { \n            frozen: true, \n            headerHozAlign: \"center\", \n            hozAlign: \"center\", \n            title: \"작업대상\", \n            field: \"applyTarget\", \n            sorter: \"string\", \n            width: 100,\n            formatter: (cell) => {\n              const rowData = cell.getRow().getData();\n              let label = \"\";\n              let stateField = \"\";\n              if (rowData.isDeleted === \"Y\") {\n                label = \"삭제\";\n                stateField = \"isDeleted\";\n              } else if (rowData.isAdded === \"Y\") {\n                label = \"추가\";\n                stateField = \"isAdded\";\n              } else if (rowData.isChanged === \"Y\") {\n                label = \"변경\";\n                stateField = \"isChanged\";\n              }\n              if (!label) return \"\";\n              const div = document.createElement(\"div\");\n              div.style.display = \"flex\";\n              div.style.alignItems = \"center\";\n              div.style.justifyContent = \"center\";\n              div.style.gap = \"5px\";\n              const checkbox = document.createElement(\"input\");\n              checkbox.type = \"checkbox\";\n              checkbox.checked = rowData[stateField] === \"Y\";\n              checkbox.onclick = () => {\n                setTimeout(() => {\n                  setData((prevData) =>\n                    prevData.map((row) => {\n                      if (row.FILEID === rowData.FILEID) {\n                        const updatedRow = { ...row, [stateField]: checkbox.checked ? \"Y\" : \"N\" };\n                        if (stateField === \"isDeleted\" && !checkbox.checked) {\n                          updatedRow.isChanged = \"N\";\n                        }\n                        if (stateField === \"isAdded\" && !checkbox.checked) {\n                          return null;\n                        }\n                        return updatedRow;\n                      }\n                      return row;\n                    }).filter(Boolean)\n                  );\n                }, 0);\n              };\n              const span = document.createElement(\"span\");\n              span.innerText = label;\n              div.appendChild(checkbox);\n              div.appendChild(span);\n              return div;\n            }\n          },\n          { headerHozAlign: \"center\", hozAlign: \"center\", title: \"파일ID\", field: \"FILEID\", sorter: \"number\", width: 100, editable: false },\n          { headerHozAlign: \"center\", hozAlign: \"left\", title: \"제목\", field: \"TITLE\", sorter: \"string\", width: 200, ...fn_CellText, cellEdited: (cell) => fn_HandleCellEdit(cell, \"TITLE\", setData, tableInstance) },\n          { headerHozAlign: \"center\", hozAlign: \"center\", title: \"파일명\", field: \"FILENM\", sorter: \"string\", width: 200, editable: false },\n          { headerHozAlign: \"center\", hozAlign: \"center\", title: \"파일타입\", field: \"FILETYPE\", sorter: \"string\", width: 100, editable: false },\n          { headerHozAlign: \"center\", hozAlign: \"right\", title: \"파일용량\", field: \"FILESIZE\", sorter: \"string\", width: 100, editable: false },\n          { headerHozAlign: \"center\", hozAlign: \"center\", title: \"등록일\", field: \"REGEDT\", sorter: \"string\", width: 100, editable: false },\n          { headerHozAlign: \"center\", hozAlign: \"center\", title: \"등록자\", field: \"REGEDBY\", sorter: \"string\", width: 100, editable: false },\n        ], [], {\n          editable: true,\n          rowFormatter: (row) => {\n            const data = row.getData();\n            const el = row.getElement();\n            el.classList.remove(styles.deletedRow, styles.addedRow, styles.editedRow);\n            if (data.isDeleted === \"Y\") el.classList.add(styles.deletedRow);\n            else if (data.isAdded === \"Y\") el.classList.add(styles.addedRow);\n            else if (data.isChanged === \"Y\") el.classList.add(styles.editedRow);\n          },\n        });\n        if (!tableInstance.current) throw new Error(\"createTable returned undefined or null\");\n        setTableStatus(\"ready\");\n      } catch (err) {\n        setTableStatus(\"error\");\n        console.error(\"Table initialization failed:\", err.message);\n      }\n    };\n    initializeTable();\n    return () => {\n      if (tableInstance.current) {\n        tableInstance.current.destroy();\n        tableInstance.current = null;\n        setTableStatus(\"initializing\");\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isInitialRender.current) { isInitialRender.current = false; return; }\n    const table = tableInstance.current;\n    if (!table || tableStatus !== \"ready\" || loading) return;\n    if (table.rowManager?.renderer) {\n      table.setData(data);\n      if (isSearched && data.length === 0 && !loading) {\n        tableInstance.current.alert(\"검색 결과 없음\", \"info\");\n      } else {\n        tableInstance.current.clearAlert();\n        const rows = tableInstance.current.getDataCount();\n        setRowCount(rows);\n      }\n    }\n  }, [data, loading, tableStatus, isSearched]);\n\n  useEffect(() => {\n    if (!tableInstance.current || tableStatus !== \"ready\" || loading) return;\n    const { filterSelect, filterText } = tableFilters;\n    if (filterText && filterSelect) {\n      tableInstance.current.setFilter(filterSelect, \"like\", filterText);\n    } else if (filterText) {\n      if (filterText !== \"\") {\n        tableInstance.current.setFilter([\n          { field: \"TITLE\", type: \"like\", value: filterText },\n          { field: \"FILENM\", type: \"like\", value: filterText },\n        ], \"or\");\n      } else {\n        tableInstance.current.clearFilter();\n      }\n    } else {\n      tableInstance.current.clearFilter();\n    }\n  }, [tableFilters, tableStatus, loading]);\n\n  const handleUploadCancel = () => {\n    setShowAddPopup(false);\n    setNewTemplate({ TITLE: \"\", FILES: [] });\n  };\n\n  const handleDynamicEvent = (eventType) => {\n    if (eventType === 'search') handleSearch();\n    else if (eventType === 'showAddPopup') setShowAddPopup(true);\n  };\n\n  const handleSearch = async () => {\n    setLoading(true);\n    setIsSearched(true);\n    try {\n      const params = { pGUBUN: \"LIST\", pTITLE: filters.searchText || \"\", pFILEID: \"\", pRPTCD: \"\", pDEBUG: \"F\" };\n      const response = await fetchData(\"excelupload/template/filelist\", params);\n      if (!response.success) {\n        errorMsgPopup(response.message || \"데이터를 가져오는 중 오류가 발생했습니다.\");\n        setData([]);\n        return;\n      }\n      if (response.errMsg !== \"\") {\n        setData([]);\n        return;\n      }\n      const responseData = Array.isArray(response.data) ? response.data : [];\n      setData(responseData.map(row => ({ ...row, isChanged: \"N\", isDeleted: \"N\", isAdded: \"N\" })));\n    } catch (err) {\n      errorMsgPopup(err.response?.data?.message || \"데이터를 가져오는 중 오류가 발생했습니다.\");\n      setData([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleUpload = async () => {\n    if (!newTemplate.TITLE.trim()) {\n      return { error: \"제목을 입력해주세요.\" };\n    }\n    if (!newTemplate.FILES.length) {\n      return { error: \"파일을 선택해 주세요.\" };\n    }\n    const formData = new FormData();\n    formData.append(\"gubun\", \"I\");\n    formData.append(\"fileId\", \"0\");\n    formData.append(\"title\", newTemplate.TITLE);\n    newTemplate.FILES.forEach((file) => {\n      formData.append(\"files\", file);\n    });\n    try {\n      const result = await fetchFileUpload(\"excelupload/template/fileupload\", formData);\n      if (result.errCd !== \"00\") {\n        return { error: result.errMsg || \"파일 업로드 실패\" };\n      }\n      return { success: \"파일 업로드를 성공했습니다.\" };\n    } catch (error) {\n      return { error: \"파일 업로드 중 오류가 발생했습니다: \" + error.message };\n    }\n  };\n\n  const handleDelete = (rowData) => {\n    setTimeout(() => {\n      if (rowData.isAdded === \"Y\") {\n        setData((prevData) => prevData.filter((r) => r.FILEID !== rowData.FILEID));\n      } else {\n        const newIsDeleted = rowData.isDeleted === \"Y\" ? \"N\" : \"Y\";\n        setData((prevData) =>\n          prevData.map((r) =>\n            r.FILEID === rowData.FILEID\n              ? { ...r, isDeleted: newIsDeleted, isChanged: newIsDeleted === \"Y\" ? \"N\" : r.isChanged }\n              : r\n          )\n        );\n      }\n    }, 0);\n  };\n\n  const handleSave = async (e) => {\n    e.preventDefault();\n    const changedRows = data.filter((row) =>\n      (row.isDeleted === \"Y\" && row.isAdded !== \"Y\") ||\n      (row.isAdded === \"Y\") ||\n      (row.isChanged === \"Y\" && row.isDeleted === \"N\")\n    );\n    if (changedRows.length === 0) {\n      errorMsgPopup(\"변경된 데이터가 없습니다.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const promises = changedRows.map(async (row) => {\n        let pGUBUN = \"\";\n        if (row.isDeleted === \"Y\" && row.isAdded !== \"Y\") {\n          pGUBUN = \"D\";\n        } else if (row.isAdded === \"Y\") {\n          pGUBUN = \"I\";\n        } else if (row.isChanged === \"Y\" && row.isDeleted === \"N\") {\n          pGUBUN = \"U\";\n        }\n        const params = {\n          gubun: pGUBUN,\n          fileId: row.FILEID.toString(),\n          title: row.TITLE || \"\",\n        };\n\n        try {\n          const response = await fetchData(\"excelupload/template/filesave\", params );\n          if (!response.success) {\n            throw new Error(response.message || `Failed to ${pGUBUN} file ${row.FILEID}`);\n          }\n          return { ...row, success: true };\n        } catch (error) {\n          console.error(`Error processing ${pGUBUN} for FILEID: ${row.FILEID}`, error);\n          return { ...row, success: false, error: error.message };\n        }\n      });\n      const results = await Promise.all(promises);\n      const errors = results.filter((result) => !result.success);\n      if (errors.length > 0) {\n        errorMsgPopup(`일부 작업이 실패했습니다: ${errors.map((e) => e.error).join(\", \")}`);\n      } else {\n        msgPopup(\"모든 변경사항이 성공적으로 저장되었습니다.\");\n        await handleSearch();\n      }\n    } catch (err) {\n      console.error(\"Save operation failed:\", err);\n      errorMsgPopup(err.message || \"저장 중 오류가 발생했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <MainSearch config={searchConfig} filters={filters} setFilters={setFilters} onEvent={handleDynamicEvent} />\n      <TableSearch \n        filterFields={filterTableFields} \n        filters={tableFilters} \n        setFilters={setTableFilters} \n        rowCount={rowCount} \n        onDownloadExcel={() => handleDownloadExcel(tableInstance.current, tableStatus, \"템플릿관리.xlsx\")} \n        buttonStyles={styles}\n      >\n        <div className={styles.btnGroupCustom}>\n          <button\n            className={`${styles.btn} text-bg-primary`}\n            onClick={() => handleDynamicEvent('showAddPopup')}\n          >\n            추가\n          </button>\n          <button \n            className={`${styles.btn} text-bg-success`} \n            onClick={handleSave}\n          >\n            저장\n          </button>\n        </div>\n      </TableSearch>\n      <div className={styles.tableWrapper}>\n        {tableStatus === \"initializing\" && <div>초기화 중...</div>}\n        {loading && <div>로딩 중...</div>}\n        <div ref={tableRef} className={styles.tableSection} style={{ visibility: loading || tableStatus !== \"ready\" ? \"hidden\" : \"visible\" }} />\n      </div>\n      <CommonPopup\n        show={showAddPopup}\n        onHide={handleUploadCancel}\n        title=\"템플릿 추가\"\n        requiresConfirm={true} // Enable confirmation for \"템플릿추가\"\n        confirmMessage=\"템플릿을 추가하시겠습니까?\" // Custom confirmation message\n        buttons={[\n          { label: \"닫기\", className: `${styles.btn} ${styles.btnSecondary} btn btn-secondary`, action: handleUploadCancel },\n          {\n            label: \"템플릿추가\",\n            className: `${styles.btn} ${styles.btnPrimary} btn text-bg-success`,\n            action: () => handleUpload().then((result) => ({ result, onSuccess: handleSearch })),\n          },\n        ]}\n      >\n        <div className=\"mb-3\">\n          <label className=\"form-label\">제목</label>\n          <input\n            type=\"text\"\n            className={`form-control ${styles.formControl}`}\n            value={newTemplate.TITLE}\n            onChange={(e) => setNewTemplate({ ...newTemplate, TITLE: e.target.value })}\n            placeholder=\"템플릿 제목을 입력하세요\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">파일</label>\n          <input\n            type=\"file\"\n            className={`form-control ${styles.formControl}`}\n            accept=\".xlsx,.xls\"\n            multiple\n            onChange={(e) => {\n              const selectedFiles = Array.from(e.target.files || []);\n              setNewTemplate({ ...newTemplate, FILES: selectedFiles });\n            }}\n          />\n        </div>\n      </CommonPopup>\n    </div>\n  );\n};\n\nexport default ExcelUploadTemplateManage;"],"names":["getFieldOptions","fieldId","fn_CellText","fn_CellButton","label","className","onClick","cell","button","fn_HandleCellEdit","field","setData","tableInstance","rowId","newValue","validation","common","errorMsgPopup","prevData","row","updatedRow","ExcelUploadTemplateManage","user","useStore","tableRef","useRef","isInitialRender","searchConfig","filterTableFields","filters","setFilters","useState","initialFilters","area","tableFilters","setTableFilters","data","loading","setLoading","tableStatus","setTableStatus","rowCount","setRowCount","isSearched","setIsSearched","showAddPopup","setShowAddPopup","newTemplate","setNewTemplate","useEffect","hasPermission","resolve","createTable","styles","rowData","handleDelete","stateField","div","checkbox","span","el","err","table","_a","rows","filterSelect","filterText","handleUploadCancel","handleDynamicEvent","eventType","handleSearch","params","response","fetchData","responseData","_b","handleUpload","formData","file","result","fetchFileUpload","error","r","newIsDeleted","handleSave","e","changedRows","promises","pGUBUN","errors","msgPopup","jsxs","jsx","MainSearch","TableSearch","handleDownloadExcel","CommonPopup","selectedFiles"],"mappings":"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"}