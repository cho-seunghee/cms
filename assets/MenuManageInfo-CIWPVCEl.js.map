{"version":3,"file":"MenuManageInfo-CIWPVCEl.js","sources":["../../src/pages/oper/MenuManageInfo.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport useStore from \"../../store/store\";\nimport { hasPermission } from \"../../utils/authUtils\";\nimport CommonPopup from \"../../components/popup/CommonPopup\";\nimport MainSearch from \"../../components/main/MainSearch\";\nimport TableSearch from \"../../components/table/TableSearch\";\nimport { createTable } from \"../../utils/tableConfig\";\nimport { initialFilters } from \"../../utils/tableEvent\";\nimport { handleDownloadExcel } from \"../../utils/tableExcel\";\nimport styles from \"../../components/table/TableSearch.module.css\";\nimport { fetchData } from \"../../utils/dataUtils\";\nimport common from \"../../utils/common\";\nimport { errorMsgPopup } from \"../../utils/errorMsgPopup\";\nimport { msgPopup } from \"../../utils/msgPopup\";\n\nconst fn_CellText = { editor: \"input\", editable: true };\nconst fn_CellNumber = { editor: \"number\", editorParams: { min: 0 }, editable: true };\nconst fn_CellSelect = (values) => ({ editor: \"list\", editorParams: { values, autocomplete: true }, editable: true });\nconst fn_CellButton = (label, className, onClick) => ({\n  formatter: (cell) => {\n    const button = document.createElement(\"button\");\n    button.className = `btn btn-sm ${className}`;\n    button.innerText = label;\n    button.onclick = () => onClick(cell.getData());\n    return button;\n  },\n});\nconst fn_HandleCellEdit = (cell, field, setData, tableInstance) => {\n  const rowId = cell.getRow().getData().MENUID;\n  const newValue = cell.getValue();\n  if (field === \"MENUNM\") {\n    const validation = common.validateVarcharLength(newValue, 100, \"메뉴명\");\n    if (!validation.valid) {\n      errorMsgPopup(validation.error);\n      return;\n    }\n  } else if (field === \"URL\") {\n    const validation = common.validateVarcharLength(newValue, 250, \"URL\");\n    if (!validation.valid) {\n      errorMsgPopup(validation.error);\n      return;\n    }\n  }\n  setTimeout(() => {\n    setData((prevData) =>\n      prevData.map((row) => {\n        if (String(row.MENUID) === String(rowId)) {\n          const updatedRow = { ...row, [field]: newValue };\n          if (updatedRow.isDeleted === \"N\" && updatedRow.isAdded === \"N\") {\n            updatedRow.isChanged = \"Y\";\n          }\n          return updatedRow;\n        }\n        return row;\n      })\n    );\n    if (tableInstance.current) tableInstance.current.redraw();\n  }, 0);\n};\n\nconst fn_FormatUpperMenu = (cell, _ignored, formatMenuName) => {\n  const rowData = cell.getRow().getData();\n  const tableData = cell.getTable().getData();\n  const parent = tableData.find((item) => String(item.MENUID) === String(rowData.UPPERMENUID));\n  return parent ? formatMenuName(parent.MENUNM, parent.MENULEVEL) : \"없음\";\n};\n\n/**\n * 필드 옵션 데이터를 반환\n * @param {string} fieldId - 필드 식별자\n * @returns {Array} 옵션 배열\n */\nconst getFieldOptions = (fieldId) => {\n  const optionsMap = {\n    USEYN: [\n      { value: '', label: '전체' },\n      { value: 'Y', label: '사용' },\n      { value: 'N', label: '미사용' },\n    ],\n  };\n  return optionsMap[fieldId] || [];\n};\n\nconst MenuManageInfo = () => {\n  const { user } = useStore();\n  const navigate = useNavigate();\n\n  const searchConfig = {\n    areas: [\n      {\n        type: 'search',\n        fields: [\n          { id: 'MENUNM', type: 'text', row: 1, label: '메뉴명', labelVisible: true, placeholder: '메뉴명 검색', maxLength: 100, width: '200px', height: '30px', backgroundColor: '#ffffff', color: '#000000', enabled: true },\n          { id: 'USEYN', type: 'select', row: 1, label: '사용', labelVisible: true, options: getFieldOptions('USEYN'), width: '150px', height: '30px', backgroundColor: '#ffffff', color: '#000000', enabled: true },\n        ],\n      },\n      {\n        type: 'buttons',\n        fields: [\n          { id: 'searchBtn', type: 'button', row: 1, label: '검색', eventType: 'search', width: '80px', height: '30px', backgroundColor: '#00c4b4', color: '#ffffff', enabled: true },\n        ],\n      },\n    ],\n  };\n\n  const filterTableFields = [\n    { id: \"filterSelect\", label: \"\", type: \"select\", options: [{ value: \"\", label: \"선택\" }, { value: \"MENUNM\", label: \"메뉴명\" }, { value: \"URL\", label: \"URL\" }, { value: \"USEYN\", label: \"사용\" }] },\n    { id: \"filterText\", label: \"\", type: \"text\", placeholder: \"찾을 내용을 입력하세요\", width: \"200px\" },\n  ];\n\n  const [filters, setFilters] = useState(initialFilters(searchConfig.areas.find((area) => area.type === 'search').fields));\n  const [tableFilters, setTableFilters] = useState(initialFilters(filterTableFields));\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [isSearched, setIsSearched] = useState(false);\n  const [tableStatus, setTableStatus] = useState(\"initializing\");\n  const [showAddPopup, setShowAddPopup] = useState(false);\n  const [showUpperMenuPopup, setShowUpperMenuPopup] = useState(false);\n  const [selectedMenuId, setSelectedMenuId] = useState(null);\n  const [newMenu, setNewMenu] = useState({ MENUNM: \"\", UPPERMENUID: \"\", URL: \"\", MENULEVEL: \"1\", LEAFMENUYN: \"Y\", MENUORDER: \"\", USEYN: \"Y\" });\n  const [imsiCounter, setImsiCounter] = useState(1);\n  const [rowCount, setRowCount] = useState(0);\n  const tableRef = useRef(null);\n  const tableInstance = useRef(null);\n  const isInitialRender = useRef(true);\n\n  const formatMenuName = (menuName, level) => (level <= 1 ? menuName : `${\"  \".repeat(level - 1)}└${menuName}`);\n\n  const columns = [\n    { frozen: true, headerHozAlign: \"center\", hozAlign: \"center\", title: \"작업\", field: \"actions\", width: 80, visible: true, ...fn_CellButton(\"삭제\", `btn-danger ${styles.deleteButton}`, (rowData) => handleDelete(rowData)) },\n    {\n      frozen: true, headerHozAlign: \"center\", hozAlign: \"center\", title: \"작업대상\", field: \"applyTarget\", sorter: \"string\", width: 100,\n      formatter: (cell) => {\n        const rowData = cell.getRow().getData();\n        let label = \"\";\n        let stateField = \"\";\n        if (rowData.isDeleted === \"Y\") {\n          label = \"삭제\";\n          stateField = \"isDeleted\";\n        } else if (rowData.isAdded === \"Y\") {\n          label = \"추가\";\n          stateField = \"isAdded\";\n        } else if (rowData.isChanged === \"Y\") {\n          label = \"변경\";\n          stateField = \"isChanged\";\n        }\n        if (!label) return \"\";\n        const div = document.createElement(\"div\");\n        div.style.display = \"flex\";\n        div.style.alignItems = \"center\";\n        div.style.justifyContent = \"center\";\n        div.style.gap = \"5px\";\n        const checkbox = document.createElement(\"input\");\n        checkbox.type = \"checkbox\";\n        checkbox.checked = rowData[stateField] === \"Y\";\n        checkbox.onclick = () => {\n          setTimeout(() => {\n            setData((prevData) =>\n              prevData.map((row) => {\n                if (row.MENUID === rowData.MENUID) {\n                  const updatedRow = { ...row, [stateField]: checkbox.checked ? \"Y\" : \"N\" };\n                  if (stateField === \"isDeleted\" && !checkbox.checked) {\n                    updatedRow.isChanged = \"N\";\n                  }\n                  if (stateField === \"isAdded\" && !checkbox.checked) {\n                    return null;\n                  }\n                  return updatedRow;\n                }\n                return row;\n              }).filter(Boolean)\n            );\n          }, 0);\n        };\n        const span = document.createElement(\"span\");\n        span.innerText = label;\n        div.appendChild(checkbox);\n        div.appendChild(span);\n        return div;\n      },\n    },\n    { headerHozAlign: \"center\", hozAlign: \"center\", title: \"ID\", field: \"MENUID\", sorter: \"string\", width: 100 },\n    { headerHozAlign: \"center\", hozAlign: \"left\", title: \"메뉴명\", field: \"MENUNM\", sorter: \"string\", width: 200, ...fn_CellText, cellEdited: (cell) => fn_HandleCellEdit(cell, \"MENUNM\", setData, tableInstance) },\n    { headerHozAlign: \"center\", hozAlign: \"center\", title: \"상위메뉴\", field: \"UPPERMENUID\", sorter: \"string\", width: 120, formatter: (cell) => fn_FormatUpperMenu(cell, data, formatMenuName), cellClick: (e, cell) => { setSelectedMenuId(cell.getRow().getData().MENUID); setNewMenu({ ...newMenu, UPPERMENUID: cell.getRow().getData().UPPERMENUID || \"\" }); setShowUpperMenuPopup(true); } },\n    { headerHozAlign: \"center\", hozAlign: \"left\", title: \"URL\", field: \"URL\", sorter: \"string\", width: 300, ...fn_CellText, cellEdited: (cell) => fn_HandleCellEdit(cell, \"URL\", setData, tableInstance) },\n    { headerHozAlign: \"center\", hozAlign: \"center\", title: \"레벨\", field: \"MENULEVEL\", sorter: \"number\", width: 80, editable: false },\n    { headerHozAlign: \"center\", hozAlign: \"center\", title: \"하위포함\", field: \"LEAFMENUYN\", sorter: \"string\", width: 100, ...fn_CellSelect([\"Y\", \"N\"]), cellEdited: (cell) => fn_HandleCellEdit(cell, \"LEAFMENUYN\", setData, tableInstance) },\n    { headerHozAlign: \"center\", hozAlign: \"center\", title: \"순서\", field: \"MENUORDER\", sorter: \"number\", width: 80, ...fn_CellNumber, cellEdited: (cell) => fn_HandleCellEdit(cell, \"MENUORDER\", setData, tableInstance) },\n    { headerHozAlign: \"center\", hozAlign: \"center\", title: \"사용\", field: \"USEYN\", sorter: \"string\", width: 80, ...fn_CellSelect([\"Y\", \"N\"]), cellEdited: (cell) => fn_HandleCellEdit(cell, \"USEYN\", setData, tableInstance) },\n  ];\n\n  const loadData = async () => {\n    setLoading(true);\n    setIsSearched(true);\n    try {\n      const params = {\n        MENUNM: filters.MENUNM || \"\",\n        USEYN: filters.USEYN || \"\",\n        DEBUG: \"F\"\n      };\n      const response = await fetchData(\"oper/menumng/list\", params );\n      if (!response.success) {\n        errorMsgPopup(response.message || \"메뉴 데이터를 가져오는 중 오류가 발생했습니다.\");\n        setData([]);\n        return;\n      }\n      if (response.errMsg !== \"\") {\n        setData([]);\n        return;\n      }\n      const responseData = Array.isArray(response.data) ? response.data : [];\n      const leveledData = responseData.map((row) => ({\n        ...row,\n        MENULEVEL: calculateMenuLevel(row, responseData),\n        MENUORDER: Number(row.MENUORDER),\n        isDeleted: \"N\",\n        isEdited: \"N\",\n        isAdded: \"N\",\n      }));\n      setData(leveledData);\n    } catch (err) {\n      console.error(\"데이터 로드 실패:\", err);\n      errorMsgPopup(err.response?.data?.message || \"메뉴 데이터를 가져오는 중 오류가 발생했습니다.\");\n      setData([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const calculateMenuLevel = (row, data, visited = new Set()) => {\n    if (!row.UPPERMENUID) return 1;\n    if (visited.has(row.MENUID)) return 1;\n    visited.add(row.MENUID);\n    const parent = data.find((item) => item.MENUID === row.UPPERMENUID);\n    return parent ? calculateMenuLevel(parent, data, visited) + 1 : 1;\n  };\n\n  useEffect(() => {\n    if (!user || !hasPermission(user.auth, \"menuManage\")) navigate(\"/\");\n  }, [user, navigate]);\n\n  useEffect(() => {\n    const initializeTable = async () => {\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      if (!tableRef.current) {\n        console.warn(\"테이블 컨테이너가 준비되지 않았습니다.\");\n        return;\n      }\n      try {\n        tableInstance.current = createTable(tableRef.current, columns, [], {\n          editable: true,\n          rowFormatter: (row) => {\n            const data = row.getData();\n            const el = row.getElement();\n            el.classList.remove(styles.deletedRow, styles.addedRow, styles.editedRow);\n            if (data.isDeleted === \"Y\") el.classList.add(styles.deletedRow);\n            else if (data.isAdded === \"Y\") el.classList.add(styles.addedRow);\n            else if (data.isChanged === \"Y\") el.classList.add(styles.editedRow);\n          },\n        });\n        if (!tableInstance.current) throw new Error(\"createTable returned undefined or null\");\n        setTableStatus(\"ready\");\n      } catch (err) {\n        setTableStatus(\"error\");\n        console.error(\"Table initialization failed:\", err.message);\n      }\n    };\n    initializeTable();\n    return () => {\n      if (tableInstance.current) {\n        tableInstance.current.destroy();\n        tableInstance.current = null;\n        setTableStatus(\"initializing\");\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isInitialRender.current) {\n      isInitialRender.current = false;\n      return;\n    }\n    const table = tableInstance.current;\n    if (!table || tableStatus !== \"ready\" || loading) return;\n    if (table.rowManager?.renderer) {\n      table.setData(data);\n      if (isSearched && data.length === 0 && !loading) {\n        tableInstance.current.alert(\"검색 결과 없음\", \"info\");\n      } else {\n        tableInstance.current.clearAlert();\n        const rows = tableInstance.current.getDataCount();\n        setRowCount(rows);\n      }\n    } else {\n      console.warn(\"renderer가 아직 초기화되지 않았습니다.\");\n    }\n  }, [data, loading, tableStatus, isSearched]);\n\n  useEffect(() => {\n    if (isInitialRender.current || !tableInstance.current || tableStatus !== \"ready\" || loading) return;\n    const { filterSelect, filterText } = tableFilters;\n    if (filterText && filterSelect) {\n      tableInstance.current.setFilter(filterSelect, \"like\", filterText);\n    } else if (filterText) {\n      if (filterText !== \"\") {\n        tableInstance.current.setFilter(\n          [\n            { field: \"MENUNM\", type: \"like\", value: filterText },\n            { field: \"URL\", type: \"like\", value: filterText },\n            { field: \"USEYN\", type: \"like\", value: filterText },\n          ],\n          \"or\"\n        );\n      } else {\n        tableInstance.current.clearFilter();\n      }\n    } else if (filterSelect) {\n      tableInstance.current.clearFilter();\n    }\n  }, [tableFilters.filterSelect, tableFilters.filterText, tableStatus, loading]);\n\n  const handleDynamicEvent = (eventType) => {\n    if (eventType === 'search') {\n      loadData();\n    }\n  };\n\n  const handleAddClick = () => {\n    setNewMenu({ MENUNM: \"\", UPPERMENUID: \"\", URL: \"\", MENULEVEL: \"1\", LEAFMENUYN: \"Y\", MENUORDER: \"\", USEYN: \"Y\" });\n    setShowAddPopup(true);\n  };\n\n  const handleAddConfirm = () => {\n    const menuNameValidation = common.validateVarcharLength(newMenu.MENUNM, 100, \"메뉴명\");\n    if (!menuNameValidation.valid) {\n      errorMsgPopup(menuNameValidation.error);\n      return;\n    }\n    const urlValidation = common.validateVarcharLength(newMenu.URL, 250, \"URL\");\n    if (!urlValidation.valid) {\n      errorMsgPopup(urlValidation.error);\n      return;\n    }\n    if (!newMenu.MENUNM.trim()) {\n      errorMsgPopup(\"메뉴명을 입력해주세요.\");\n      return;\n    }\n    if (!newMenu.MENUORDER || isNaN(newMenu.MENUORDER)) {\n      errorMsgPopup(\"메뉴 순서를 숫자로 입력해주세요.\");\n      return;\n    }\n    const newMenuId = `IMSI${String(imsiCounter).padStart(4, \"0\")}`;\n    const newRow = {\n      MENUID: newMenuId,\n      MENUNM: newMenu.MENUNM,\n      UPPERMENUID: newMenu.UPPERMENUID,\n      URL: newMenu.URL,\n      MENULEVEL: newMenu.MENULEVEL,\n      LEAFMENUYN: newMenu.LEAFMENUYN,\n      MENUORDER: parseInt(newMenu.MENUORDER),\n      USEYN: newMenu.USEYN,\n      isDeleted: \"N\",\n      isEdited: \"N\",\n      isAdded: \"Y\",\n    };\n    setData((prevData) => [newRow, ...prevData]);\n    setImsiCounter((prev) => prev + 1);\n    setShowAddPopup(false);\n    setNewMenu({ MENUNM: \"\", UPPERMENUID: \"\", URL: \"\", MENULEVEL: \"1\", LEAFMENUYN: \"Y\", MENUORDER: \"\", USEYN: \"Y\" });\n  };\n\n  const handleAddCancel = () => {\n    setShowAddPopup(false);\n    setNewMenu({ MENUNM: \"\", UPPERMENUID: \"\", URL: \"\", MENULEVEL: \"1\", LEAFMENUYN: \"Y\", MENUORDER: \"\", USEYN: \"Y\" });\n  };\n\n  const handleUpperMenuConfirm = () => {\n    if (!selectedMenuId) return;\n    const newUpperMenuId = newMenu.UPPERMENUID;\n    const newLevel = newUpperMenuId\n      ? calculateMenuLevel({ UPPERMENUID: newUpperMenuId, MENUID: selectedMenuId }, data)\n      : 1;\n    setData((prevData) =>\n      prevData.map((row) => {\n        if (row.MENUID === selectedMenuId) {\n          const updatedRow = {\n            ...row,\n            UPPERMENUID: newUpperMenuId,\n            MENULEVEL: newLevel,\n            isChanged: row.isDeleted === \"N\" && row.isAdded === \"N\" ? \"Y\" : row.isChanged,\n          };\n          return updatedRow;\n        }\n        return row;\n      })\n    );\n    if (tableInstance.current) {\n      tableInstance.current.redraw();\n    }\n    setShowUpperMenuPopup(false);\n    setSelectedMenuId(null);\n    setNewMenu({ MENUNM: \"\", UPPERMENUID: \"\", URL: \"\", MENULEVEL: \"1\", LEAFMENUYN: \"Y\", MENUORDER: \"\", USEYN: \"Y\" });\n  };\n\n  const handleUpperMenuCancel = () => {\n    setShowUpperMenuPopup(false);\n    setSelectedMenuId(null);\n    setNewMenu({ MENUNM: \"\", UPPERMENUID: \"\", URL: \"\", MENULEVEL: \"1\", LEAFMENUYN: \"Y\", MENUORDER: \"\", USEYN: \"Y\" });\n  };\n\n  const handleDelete = (rowData) => {\n    setTimeout(() => {\n      if (rowData.isAdded === \"Y\") {\n        setData((prevData) => prevData.filter((r) => r.MENUID !== rowData.MENUID));\n      } else {\n        const newIsDeleted = rowData.isDeleted === \"Y\" ? \"N\" : \"Y\";\n        setData((prevData) =>\n          prevData.map((r) =>\n            r.MENUID === rowData.MENUID\n              ? { ...r, isDeleted: newIsDeleted, isChanged: newIsDeleted === \"Y\" ? \"N\" : r.isChanged }\n              : r\n          )\n        );\n      }\n    }, 0);\n  };\n\n  const handleSave = async (e) => {\n    e.preventDefault();\n    const changedRows = data.filter((row) =>\n      (row.isDeleted === \"Y\" && row.isAdded !== \"Y\") ||\n      (row.isAdded === \"Y\") ||\n      (row.isChanged === \"Y\" && row.isDeleted === \"N\")\n    );\n    if (changedRows.length === 0) {\n      errorMsgPopup(\"변경된 데이터가 없습니다.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const promises = changedRows.map(async (row) => {\n        let pGUBUN = \"\";\n        if (row.isDeleted === \"Y\" && row.isAdded !== \"Y\") {\n          pGUBUN = \"D\";\n        } else if (row.isAdded === \"Y\") {\n          pGUBUN = \"I\";\n        } else if (row.isChanged === \"Y\" && row.isDeleted === \"N\") {\n          pGUBUN = \"U\";\n        }\n        const params = {\n          pGUBUN,\n          pMENUID: row.MENUID,\n          pMENUNM: row.MENUNM || \"\",\n          pUPPERMENUID: row.UPPERMENUID || \"\",\n          pURL: row.URL || \"\",\n          pMENULEVEL: String(row.MENULEVEL) || \"1\",\n          pMENUORDER: String(row.MENUORDER) || \"\",\n          pUSEYN: row.USEYN || \"Y\",\n        };\n        try {\n          const response = await fetchData(\"oper/menumng/save\", params );\n          if (!response.success) {\n            throw new Error(response.message || `Failed to ${pGUBUN} menu ${row.MENUID}`);\n          }\n          return { ...row, success: true };\n        } catch (error) {\n          console.error(`Error processing ${pGUBUN} for MENUID: ${row.MENUID}`, error);\n          return { ...row, success: false, error: error.message };\n        }\n      });\n      const results = await Promise.all(promises);\n      const errors = results.filter((result) => !result.success);\n      if (errors.length > 0) {\n        errorMsgPopup(`일부 작업이 실패했습니다: ${errors.map((e) => e.error).join(\", \")}`);\n      } else {\n        msgPopup(\"모든 변경사항이 성공적으로 저장되었습니다.\");\n        await loadData();\n      }\n    } catch (err) {\n      console.error(\"Save operation failed:\", err);\n      errorMsgPopup(err.message || \"저장 중 오류가 발생했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <MainSearch\n        config={searchConfig}\n        filters={filters}\n        setFilters={setFilters}\n        onEvent={handleDynamicEvent}\n      />\n      <TableSearch\n        filterFields={filterTableFields}\n        filters={tableFilters}\n        setFilters={setTableFilters}\n        rowCount={rowCount}\n        onDownloadExcel={() => handleDownloadExcel(tableInstance.current, tableStatus, \"메뉴관리.xlsx\")}\n        buttonStyles={styles}\n      >\n        <div className={styles.btnGroupCustom}>\n          <button className={`${styles.btn} text-bg-primary`} onClick={handleAddClick}>\n            추가\n          </button>\n          <button className={`${styles.btn} text-bg-success`} onClick={handleSave}>\n            저장\n          </button>\n        </div>\n      </TableSearch>\n      <div className={styles.tableWrapper}>\n        {tableStatus === \"initializing\" && <div>초기화 중...</div>}\n        {loading && <div>로딩 중...</div>}\n        <div\n          ref={tableRef}\n          className={styles.tableSection}\n          style={{ visibility: loading || tableStatus !== \"ready\" ? \"hidden\" : \"visible\" }}\n        />\n      </div>\n      <CommonPopup\n        show={showAddPopup}\n        onHide={handleAddCancel}\n        onConfirm={handleAddConfirm}\n        title=\"메뉴 추가\"\n      >\n        <div className=\"mb-3\">\n          <label className=\"form-label\">메뉴명</label>\n          <input\n            type=\"text\"\n            className={`form-control ${styles.formControl}`}\n            value={newMenu.MENUNM}\n            onChange={(e) => setNewMenu({ ...newMenu, MENUNM: e.target.value })}\n            placeholder=\"메뉴명을 입력하세요\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">상위메뉴</label>\n          <select\n            className={`form-select ${styles.formSelect}`}\n            value={newMenu.UPPERMENUID}\n            onChange={(e) => {\n              const upperMenuId = e.target.value;\n              const newLevel = upperMenuId\n                ? calculateMenuLevel({ UPPERMENUID: upperMenuId, MENUID: \"temp\" }, data)\n                : 1;\n              setNewMenu({ ...newMenu, UPPERMENUID: upperMenuId, MENULEVEL: String(newLevel) });\n            }}\n          >\n            <option value=\"\">없음</option>\n            {data\n              .filter((row) => row.MENUID !== newMenu.MENUID)\n              .map((row) => (\n                <option key={row.MENUID} value={row.MENUID}>\n                  {formatMenuName(row.MENUNM, row.MENULEVEL)}\n                </option>\n              ))}\n          </select>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">URL</label>\n          <input\n            type=\"text\"\n            className={`form-control ${styles.formControl}`}\n            value={newMenu.URL}\n            onChange={(e) => setNewMenu({ ...newMenu, URL: e.target.value })}\n            placeholder=\"URL을 입력하세요\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">메뉴순서</label>\n          <input\n            type=\"number\"\n            className={`form-control ${styles.formControl}`}\n            value={newMenu.MENUORDER}\n            onChange={(e) => setNewMenu({ ...newMenu, MENUORDER: e.target.value })}\n            placeholder=\"메뉴 순서를 입력하세요\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">하위포함</label>\n          <select\n            className={`form-select ${styles.formSelect}`}\n            value={newMenu.LEAFMENUYN}\n            onChange={(e) => setNewMenu({ ...newMenu, LEAFMENUYN: e.target.value })}\n          >\n            <option value=\"Y\">Y</option>\n            <option value=\"N\">N</option>\n          </select>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">사용</label>\n          <select\n            className={`form-select ${styles.formSelect}`}\n            value={newMenu.USEYN}\n            onChange={(e) => setNewMenu({ ...newMenu, USEYN: e.target.value })}\n          >\n            <option value=\"Y\">Y</option>\n            <option value=\"N\">N</option>\n          </select>\n        </div>\n      </CommonPopup>\n      <CommonPopup\n        show={showUpperMenuPopup}\n        onHide={handleUpperMenuCancel}\n        onConfirm={handleUpperMenuConfirm}\n        title=\"상위메뉴 선택\"\n      >\n        <div className=\"mb-3\">\n          <label className=\"form-label\">상위메뉴</label>\n          <select\n            className={`form-select ${styles.formSelect}`}\n            value={newMenu.UPPERMENUID}\n            onChange={(e) => setNewMenu({ ...newMenu, UPPERMENUID: e.target.value })}\n          >\n            <option value=\"\">없음</option>\n            {data\n              .filter((row) => row.MENUID !== selectedMenuId)\n              .map((row) => (\n                <option key={row.MENUID} value={row.MENUID}>\n                  {formatMenuName(row.MENUNM, row.MENULEVEL)}\n                </option>\n              ))}\n          </select>\n        </div>\n      </CommonPopup>\n    </div>\n  );\n};\n\nexport default MenuManageInfo;"],"names":["fn_CellText","fn_CellNumber","fn_CellSelect","values","fn_CellButton","label","className","onClick","cell","button","fn_HandleCellEdit","field","setData","tableInstance","rowId","newValue","validation","common","errorMsgPopup","prevData","row","updatedRow","fn_FormatUpperMenu","_ignored","formatMenuName","rowData","parent","item","getFieldOptions","fieldId","MenuManageInfo","user","useStore","navigate","useNavigate","searchConfig","filterTableFields","filters","setFilters","useState","initialFilters","area","tableFilters","setTableFilters","loading","setLoading","data","isSearched","setIsSearched","tableStatus","setTableStatus","showAddPopup","setShowAddPopup","showUpperMenuPopup","setShowUpperMenuPopup","selectedMenuId","setSelectedMenuId","newMenu","setNewMenu","imsiCounter","setImsiCounter","rowCount","setRowCount","tableRef","useRef","isInitialRender","menuName","level","columns","styles","handleDelete","stateField","div","checkbox","span","loadData","params","response","fetchData","responseData","leveledData","calculateMenuLevel","err","_b","_a","visited","useEffect","hasPermission","resolve","createTable","el","table","rows","filterSelect","filterText","handleDynamicEvent","eventType","handleAddClick","handleAddConfirm","menuNameValidation","urlValidation","newRow","prev","handleAddCancel","handleUpperMenuConfirm","newUpperMenuId","newLevel","handleUpperMenuCancel","r","newIsDeleted","handleSave","changedRows","promises","pGUBUN","error","errors","result","e","msgPopup","jsxs","jsx","MainSearch","TableSearch","handleDownloadExcel","CommonPopup","upperMenuId"],"mappings":"+UAgBA,MAAMA,EAAc,CAAE,OAAQ,QAAS,SAAU,EAAA,EAC3CC,GAAgB,CAAE,OAAQ,SAAU,aAAc,CAAE,IAAK,CAAA,EAAK,SAAU,EAAA,EACxEC,EAAiBC,IAAY,CAAE,OAAQ,OAAQ,aAAc,CAAE,OAAAA,EAAQ,aAAc,EAAA,EAAQ,SAAU,EAAA,GACvGC,GAAgB,CAACC,EAAOC,EAAWC,KAAa,CACpD,UAAYC,GAAS,CACnB,MAAMC,EAAS,SAAS,cAAc,QAAQ,EAC9C,OAAAA,EAAO,UAAY,cAAcH,CAAS,GAC1CG,EAAO,UAAYJ,EACnBI,EAAO,QAAU,IAAMF,EAAQC,EAAK,SAAS,EACtCC,CAAA,CAEX,GACMC,EAAoB,CAACF,EAAMG,EAAOC,EAASC,IAAkB,CACjE,MAAMC,EAAQN,EAAK,OAAA,EAAS,UAAU,OAChCO,EAAWP,EAAK,SAAA,EACtB,GAAIG,IAAU,SAAU,CACtB,MAAMK,EAAaC,EAAO,sBAAsBF,EAAU,IAAK,KAAK,EACpE,GAAI,CAACC,EAAW,MAAO,CACrBE,EAAcF,EAAW,KAAK,EAC9B,MAAA,CACF,SACSL,IAAU,MAAO,CAC1B,MAAMK,EAAaC,EAAO,sBAAsBF,EAAU,IAAK,KAAK,EACpE,GAAI,CAACC,EAAW,MAAO,CACrBE,EAAcF,EAAW,KAAK,EAC9B,MAAA,CACF,CAEF,WAAW,IAAM,CACfJ,EAASO,GACPA,EAAS,IAAKC,GAAQ,CACpB,GAAI,OAAOA,EAAI,MAAM,IAAM,OAAON,CAAK,EAAG,CACxC,MAAMO,EAAa,CAAE,GAAGD,EAAK,CAACT,CAAK,EAAGI,CAAA,EACtC,OAAIM,EAAW,YAAc,KAAOA,EAAW,UAAY,MACzDA,EAAW,UAAY,KAElBA,CAAA,CAET,OAAOD,CAAA,CACR,CAAA,EAECP,EAAc,SAASA,EAAc,QAAQ,OAAA,CAAO,EACvD,CAAC,CACN,EAEMS,GAAqB,CAACd,EAAMe,EAAUC,IAAmB,CAC7D,MAAMC,EAAUjB,EAAK,OAAA,EAAS,QAAA,EAExBkB,EADYlB,EAAK,SAAA,EAAW,QAAA,EACT,KAAMmB,GAAS,OAAOA,EAAK,MAAM,IAAM,OAAOF,EAAQ,WAAW,CAAC,EAC3F,OAAOC,EAASF,EAAeE,EAAO,OAAQA,EAAO,SAAS,EAAI,IACpE,EAOME,GAAmBC,IACJ,CACjB,MAAO,CACL,CAAE,MAAO,GAAI,MAAO,IAAA,EACpB,CAAE,MAAO,IAAK,MAAO,IAAA,EACrB,CAAE,MAAO,IAAK,MAAO,KAAA,CAAM,CAC7B,GAEgBA,CAAO,GAAK,CAAA,EAG1BC,GAAiB,IAAM,CAC3B,KAAM,CAAE,KAAAC,CAAA,EAASC,GAAA,EACXC,EAAWC,GAAA,EAEXC,EAAe,CACnB,MAAO,CACL,CACE,KAAM,SACN,OAAQ,CACN,CAAE,GAAI,SAAU,KAAM,OAAQ,IAAK,EAAG,MAAO,MAAO,aAAc,GAAM,YAAa,SAAU,UAAW,IAAK,MAAO,QAAS,OAAQ,OAAQ,gBAAiB,UAAW,MAAO,UAAW,QAAS,EAAA,EACtM,CAAE,GAAI,QAAS,KAAM,SAAU,IAAK,EAAG,MAAO,KAAM,aAAc,GAAM,QAASP,GAAgB,OAAO,EAAG,MAAO,QAAS,OAAQ,OAAQ,gBAAiB,UAAW,MAAO,UAAW,QAAS,EAAA,CAAK,CACzM,EAEF,CACE,KAAM,UACN,OAAQ,CACN,CAAE,GAAI,YAAa,KAAM,SAAU,IAAK,EAAG,MAAO,KAAM,UAAW,SAAU,MAAO,OAAQ,OAAQ,OAAQ,gBAAiB,UAAW,MAAO,UAAW,QAAS,EAAA,CAAK,CAC1K,CACF,CACF,EAGIQ,EAAoB,CACxB,CAAE,GAAI,eAAgB,MAAO,GAAI,KAAM,SAAU,QAAS,CAAC,CAAE,MAAO,GAAI,MAAO,MAAQ,CAAE,MAAO,SAAU,MAAO,KAAA,EAAS,CAAE,MAAO,MAAO,MAAO,KAAA,EAAS,CAAE,MAAO,QAAS,MAAO,IAAA,CAAM,CAAA,EACzL,CAAE,GAAI,aAAc,MAAO,GAAI,KAAM,OAAQ,YAAa,eAAgB,MAAO,OAAA,CAAQ,EAGrF,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAASC,EAAeL,EAAa,MAAM,KAAMM,GAASA,EAAK,OAAS,QAAQ,EAAE,MAAM,CAAC,EACjH,CAACC,EAAcC,CAAe,EAAIJ,EAAAA,SAASC,EAAeJ,CAAiB,CAAC,EAC5E,CAACQ,EAASC,CAAU,EAAIN,EAAAA,SAAS,EAAK,EACtC,CAACO,EAAMlC,CAAO,EAAI2B,EAAAA,SAAS,CAAA,CAAE,EAC7B,CAACQ,EAAYC,CAAa,EAAIT,EAAAA,SAAS,EAAK,EAC5C,CAACU,EAAaC,CAAc,EAAIX,EAAAA,SAAS,cAAc,EACvD,CAACY,EAAcC,CAAe,EAAIb,EAAAA,SAAS,EAAK,EAChD,CAACc,EAAoBC,CAAqB,EAAIf,EAAAA,SAAS,EAAK,EAC5D,CAACgB,EAAgBC,CAAiB,EAAIjB,EAAAA,SAAS,IAAI,EACnD,CAACkB,EAASC,CAAU,EAAInB,EAAAA,SAAS,CAAE,OAAQ,GAAI,YAAa,GAAI,IAAK,GAAI,UAAW,IAAK,WAAY,IAAK,UAAW,GAAI,MAAO,IAAK,EACrI,CAACoB,EAAaC,CAAc,EAAIrB,EAAAA,SAAS,CAAC,EAC1C,CAACsB,EAAUC,EAAW,EAAIvB,EAAAA,SAAS,CAAC,EACpCwB,EAAWC,EAAAA,OAAO,IAAI,EACtBnD,EAAgBmD,EAAAA,OAAO,IAAI,EAC3BC,EAAkBD,EAAAA,OAAO,EAAI,EAE7BxC,EAAiB,CAAC0C,EAAUC,IAAWA,GAAS,EAAID,EAAW,GAAG,KAAK,OAAOC,EAAQ,CAAC,CAAC,IAAID,CAAQ,GAEpGE,GAAU,CACd,CAAE,OAAQ,GAAM,eAAgB,SAAU,SAAU,SAAU,MAAO,KAAM,MAAO,UAAW,MAAO,GAAI,QAAS,GAAM,GAAGhE,GAAc,KAAM,cAAciE,EAAO,YAAY,GAAK5C,GAAY6C,GAAa7C,CAAO,CAAC,CAAA,EACrN,CACE,OAAQ,GAAM,eAAgB,SAAU,SAAU,SAAU,MAAO,OAAQ,MAAO,cAAe,OAAQ,SAAU,MAAO,IAC1H,UAAYjB,GAAS,CACnB,MAAMiB,EAAUjB,EAAK,OAAA,EAAS,QAAA,EAC9B,IAAIH,EAAQ,GACRkE,EAAa,GAWjB,GAVI9C,EAAQ,YAAc,KACxBpB,EAAQ,KACRkE,EAAa,aACJ9C,EAAQ,UAAY,KAC7BpB,EAAQ,KACRkE,EAAa,WACJ9C,EAAQ,YAAc,MAC/BpB,EAAQ,KACRkE,EAAa,aAEX,CAAClE,EAAO,MAAO,GACnB,MAAMmE,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,MAAM,QAAU,OACpBA,EAAI,MAAM,WAAa,SACvBA,EAAI,MAAM,eAAiB,SAC3BA,EAAI,MAAM,IAAM,MAChB,MAAMC,EAAW,SAAS,cAAc,OAAO,EAC/CA,EAAS,KAAO,WAChBA,EAAS,QAAUhD,EAAQ8C,CAAU,IAAM,IAC3CE,EAAS,QAAU,IAAM,CACvB,WAAW,IAAM,CACf7D,EAASO,GACPA,EAAS,IAAKC,GAAQ,CACpB,GAAIA,EAAI,SAAWK,EAAQ,OAAQ,CACjC,MAAMJ,EAAa,CAAE,GAAGD,EAAK,CAACmD,CAAU,EAAGE,EAAS,QAAU,IAAM,GAAA,EAIpE,OAHIF,IAAe,aAAe,CAACE,EAAS,UAC1CpD,EAAW,UAAY,KAErBkD,IAAe,WAAa,CAACE,EAAS,QACjC,KAEFpD,CAAA,CAET,OAAOD,CAAA,CACR,EAAE,OAAO,OAAO,CAAA,CACnB,EACC,CAAC,CAAA,EAEN,MAAMsD,EAAO,SAAS,cAAc,MAAM,EAC1C,OAAAA,EAAK,UAAYrE,EACjBmE,EAAI,YAAYC,CAAQ,EACxBD,EAAI,YAAYE,CAAI,EACbF,CAAA,CACT,EAEF,CAAE,eAAgB,SAAU,SAAU,SAAU,MAAO,KAAM,MAAO,SAAU,OAAQ,SAAU,MAAO,GAAA,EACvG,CAAE,eAAgB,SAAU,SAAU,OAAQ,MAAO,MAAO,MAAO,SAAU,OAAQ,SAAU,MAAO,IAAK,GAAGxE,EAAa,WAAaQ,GAASE,EAAkBF,EAAM,SAAUI,EAASC,CAAa,CAAA,EACzM,CAAE,eAAgB,SAAU,SAAU,SAAU,MAAO,OAAQ,MAAO,cAAe,OAAQ,SAAU,MAAO,IAAK,UAAYL,GAASc,GAAmBd,EAAMsC,EAAMtB,CAAc,EAAG,UAAW,CAAC,EAAGhB,IAAS,CAAEgD,EAAkBhD,EAAK,OAAA,EAAS,QAAA,EAAU,MAAM,EAAGkD,EAAW,CAAE,GAAGD,EAAS,YAAajD,EAAK,OAAA,EAAS,QAAA,EAAU,aAAe,GAAI,EAAG8C,EAAsB,EAAI,CAAA,CAAG,EACtX,CAAE,eAAgB,SAAU,SAAU,OAAQ,MAAO,MAAO,MAAO,MAAO,OAAQ,SAAU,MAAO,IAAK,GAAGtD,EAAa,WAAaQ,GAASE,EAAkBF,EAAM,MAAOI,EAASC,CAAa,CAAA,EACnM,CAAE,eAAgB,SAAU,SAAU,SAAU,MAAO,KAAM,MAAO,YAAa,OAAQ,SAAU,MAAO,GAAI,SAAU,EAAA,EACxH,CAAE,eAAgB,SAAU,SAAU,SAAU,MAAO,OAAQ,MAAO,aAAc,OAAQ,SAAU,MAAO,IAAK,GAAGX,EAAc,CAAC,IAAK,GAAG,CAAC,EAAG,WAAaM,GAASE,EAAkBF,EAAM,aAAcI,EAASC,CAAa,CAAA,EAClO,CAAE,eAAgB,SAAU,SAAU,SAAU,MAAO,KAAM,MAAO,YAAa,OAAQ,SAAU,MAAO,GAAI,GAAGZ,GAAe,WAAaO,GAASE,EAAkBF,EAAM,YAAaI,EAASC,CAAa,CAAA,EACjN,CAAE,eAAgB,SAAU,SAAU,SAAU,MAAO,KAAM,MAAO,QAAS,OAAQ,SAAU,MAAO,GAAI,GAAGX,EAAc,CAAC,IAAK,GAAG,CAAC,EAAG,WAAaM,GAASE,EAAkBF,EAAM,QAASI,EAASC,CAAa,CAAA,CAAE,EAGnN8D,EAAW,SAAY,SAC3B9B,EAAW,EAAI,EACfG,EAAc,EAAI,EAClB,GAAI,CACF,MAAM4B,EAAS,CACb,OAAQvC,EAAQ,QAAU,GAC1B,MAAOA,EAAQ,OAAS,GACxB,MAAO,GAAA,EAEHwC,EAAW,MAAMC,EAAU,oBAAqBF,CAAO,EAC7D,GAAI,CAACC,EAAS,QAAS,CACrB3D,EAAc2D,EAAS,SAAW,4BAA4B,EAC9DjE,EAAQ,CAAA,CAAE,EACV,MAAA,CAEF,GAAIiE,EAAS,SAAW,GAAI,CAC1BjE,EAAQ,CAAA,CAAE,EACV,MAAA,CAEF,MAAMmE,EAAe,MAAM,QAAQF,EAAS,IAAI,EAAIA,EAAS,KAAO,CAAA,EAC9DG,EAAcD,EAAa,IAAK3D,IAAS,CAC7C,GAAGA,EACH,UAAW6D,EAAmB7D,EAAK2D,CAAY,EAC/C,UAAW,OAAO3D,EAAI,SAAS,EAC/B,UAAW,IACX,SAAU,IACV,QAAS,GAAA,EACT,EACFR,EAAQoE,CAAW,CAAA,OACZE,EAAK,CACZ,QAAQ,MAAM,aAAcA,CAAG,EAC/BhE,IAAciE,GAAAC,EAAAF,EAAI,WAAJ,YAAAE,EAAc,OAAd,YAAAD,EAAoB,UAAW,4BAA4B,EACzEvE,EAAQ,CAAA,CAAE,CAAA,QACZ,CACEiC,EAAW,EAAK,CAAA,CAClB,EAGIoC,EAAqB,CAAC7D,EAAK0B,EAAMuC,EAAU,IAAI,MAAU,CAE7D,GADI,CAACjE,EAAI,aACLiE,EAAQ,IAAIjE,EAAI,MAAM,EAAG,MAAO,GACpCiE,EAAQ,IAAIjE,EAAI,MAAM,EACtB,MAAMM,EAASoB,EAAK,KAAMnB,GAASA,EAAK,SAAWP,EAAI,WAAW,EAClE,OAAOM,EAASuD,EAAmBvD,EAAQoB,EAAMuC,CAAO,EAAI,EAAI,CAAA,EAGlEC,EAAAA,UAAU,IAAM,EACV,CAACvD,GAAQ,CAACwD,GAAcxD,EAAK,KAAM,YAAY,IAAGE,EAAS,GAAG,CAAA,EACjE,CAACF,EAAME,CAAQ,CAAC,EAEnBqD,EAAAA,UAAU,MACgB,SAAY,CAElC,GADA,MAAM,IAAI,QAASE,GAAY,WAAWA,EAAS,GAAI,CAAC,EACpD,CAACzB,EAAS,QAAS,CACrB,QAAQ,KAAK,uBAAuB,EACpC,MAAA,CAEF,GAAI,CAYF,GAXAlD,EAAc,QAAU4E,GAAY1B,EAAS,QAASK,GAAS,GAAI,CACjE,SAAU,GACV,aAAehD,GAAQ,CACrB,MAAM0B,EAAO1B,EAAI,QAAA,EACXsE,EAAKtE,EAAI,WAAA,EACfsE,EAAG,UAAU,OAAOrB,EAAO,WAAYA,EAAO,SAAUA,EAAO,SAAS,EACpEvB,EAAK,YAAc,MAAQ,UAAU,IAAIuB,EAAO,UAAU,EACrDvB,EAAK,UAAY,MAAQ,UAAU,IAAIuB,EAAO,QAAQ,EACtDvB,EAAK,YAAc,OAAQ,UAAU,IAAIuB,EAAO,SAAS,CAAA,CACpE,CACD,EACG,CAACxD,EAAc,QAAS,MAAM,IAAI,MAAM,wCAAwC,EACpFqC,EAAe,OAAO,CAAA,OACfgC,EAAK,CACZhC,EAAe,OAAO,EACtB,QAAQ,MAAM,+BAAgCgC,EAAI,OAAO,CAAA,CAC3D,GAEF,EACO,IAAM,CACPrE,EAAc,UAChBA,EAAc,QAAQ,QAAA,EACtBA,EAAc,QAAU,KACxBqC,EAAe,cAAc,EAC/B,GAED,EAAE,EAELoC,EAAAA,UAAU,IAAM,OACd,GAAIrB,EAAgB,QAAS,CAC3BA,EAAgB,QAAU,GAC1B,MAAA,CAEF,MAAM0B,EAAQ9E,EAAc,QAC5B,GAAI,GAAC8E,GAAS1C,IAAgB,SAAWL,GACzC,IAAIwC,EAAAO,EAAM,aAAN,MAAAP,EAAkB,SAEpB,GADAO,EAAM,QAAQ7C,CAAI,EACdC,GAAcD,EAAK,SAAW,GAAK,CAACF,EACtC/B,EAAc,QAAQ,MAAM,WAAY,MAAM,MACzC,CACLA,EAAc,QAAQ,WAAA,EACtB,MAAM+E,EAAO/E,EAAc,QAAQ,aAAA,EACnCiD,GAAY8B,CAAI,CAAA,MAGlB,QAAQ,KAAK,2BAA2B,CAC1C,EACC,CAAC9C,EAAMF,EAASK,EAAaF,CAAU,CAAC,EAE3CuC,EAAAA,UAAU,IAAM,CACd,GAAIrB,EAAgB,SAAW,CAACpD,EAAc,SAAWoC,IAAgB,SAAWL,EAAS,OAC7F,KAAM,CAAE,aAAAiD,EAAc,WAAAC,CAAA,EAAepD,EACjCoD,GAAcD,EAChBhF,EAAc,QAAQ,UAAUgF,EAAc,OAAQC,CAAU,EACvDA,EACLA,IAAe,GACjBjF,EAAc,QAAQ,UACpB,CACE,CAAE,MAAO,SAAU,KAAM,OAAQ,MAAOiF,CAAA,EACxC,CAAE,MAAO,MAAO,KAAM,OAAQ,MAAOA,CAAA,EACrC,CAAE,MAAO,QAAS,KAAM,OAAQ,MAAOA,CAAA,CAAW,EAEpD,IAAA,EAGFjF,EAAc,QAAQ,YAAA,EAEfgF,GACThF,EAAc,QAAQ,YAAA,CACxB,EACC,CAAC6B,EAAa,aAAcA,EAAa,WAAYO,EAAaL,CAAO,CAAC,EAE7E,MAAMmD,GAAsBC,GAAc,CACpCA,IAAc,UAChBrB,EAAA,CACF,EAGIsB,GAAiB,IAAM,CAC3BvC,EAAW,CAAE,OAAQ,GAAI,YAAa,GAAI,IAAK,GAAI,UAAW,IAAK,WAAY,IAAK,UAAW,GAAI,MAAO,IAAK,EAC/GN,EAAgB,EAAI,CAAA,EAGhB8C,GAAmB,IAAM,CAC7B,MAAMC,EAAqBlF,EAAO,sBAAsBwC,EAAQ,OAAQ,IAAK,KAAK,EAClF,GAAI,CAAC0C,EAAmB,MAAO,CAC7BjF,EAAciF,EAAmB,KAAK,EACtC,MAAA,CAEF,MAAMC,EAAgBnF,EAAO,sBAAsBwC,EAAQ,IAAK,IAAK,KAAK,EAC1E,GAAI,CAAC2C,EAAc,MAAO,CACxBlF,EAAckF,EAAc,KAAK,EACjC,MAAA,CAEF,GAAI,CAAC3C,EAAQ,OAAO,OAAQ,CAC1BvC,EAAc,cAAc,EAC5B,MAAA,CAEF,GAAI,CAACuC,EAAQ,WAAa,MAAMA,EAAQ,SAAS,EAAG,CAClDvC,EAAc,oBAAoB,EAClC,MAAA,CAGF,MAAMmF,EAAS,CACb,OAFgB,OAAO,OAAO1C,CAAW,EAAE,SAAS,EAAG,GAAG,CAAC,GAG3D,OAAQF,EAAQ,OAChB,YAAaA,EAAQ,YACrB,IAAKA,EAAQ,IACb,UAAWA,EAAQ,UACnB,WAAYA,EAAQ,WACpB,UAAW,SAASA,EAAQ,SAAS,EACrC,MAAOA,EAAQ,MACf,UAAW,IACX,SAAU,IACV,QAAS,GAAA,EAEX7C,EAASO,GAAa,CAACkF,EAAQ,GAAGlF,CAAQ,CAAC,EAC3CyC,EAAgB0C,GAASA,EAAO,CAAC,EACjClD,EAAgB,EAAK,EACrBM,EAAW,CAAE,OAAQ,GAAI,YAAa,GAAI,IAAK,GAAI,UAAW,IAAK,WAAY,IAAK,UAAW,GAAI,MAAO,IAAK,CAAA,EAG3G6C,GAAkB,IAAM,CAC5BnD,EAAgB,EAAK,EACrBM,EAAW,CAAE,OAAQ,GAAI,YAAa,GAAI,IAAK,GAAI,UAAW,IAAK,WAAY,IAAK,UAAW,GAAI,MAAO,IAAK,CAAA,EAG3G8C,GAAyB,IAAM,CACnC,GAAI,CAACjD,EAAgB,OACrB,MAAMkD,EAAiBhD,EAAQ,YACzBiD,EAAWD,EACbxB,EAAmB,CAAE,YAAawB,EAAgB,OAAQlD,CAAA,EAAkBT,CAAI,EAChF,EACJlC,EAASO,GACPA,EAAS,IAAKC,GACRA,EAAI,SAAWmC,EACE,CACjB,GAAGnC,EACH,YAAaqF,EACb,UAAWC,EACX,UAAWtF,EAAI,YAAc,KAAOA,EAAI,UAAY,IAAM,IAAMA,EAAI,SAAA,EAIjEA,CACR,CAAA,EAECP,EAAc,SAChBA,EAAc,QAAQ,OAAA,EAExByC,EAAsB,EAAK,EAC3BE,EAAkB,IAAI,EACtBE,EAAW,CAAE,OAAQ,GAAI,YAAa,GAAI,IAAK,GAAI,UAAW,IAAK,WAAY,IAAK,UAAW,GAAI,MAAO,IAAK,CAAA,EAG3GiD,GAAwB,IAAM,CAClCrD,EAAsB,EAAK,EAC3BE,EAAkB,IAAI,EACtBE,EAAW,CAAE,OAAQ,GAAI,YAAa,GAAI,IAAK,GAAI,UAAW,IAAK,WAAY,IAAK,UAAW,GAAI,MAAO,IAAK,CAAA,EAG3GY,GAAgB7C,GAAY,CAChC,WAAW,IAAM,CACf,GAAIA,EAAQ,UAAY,IACtBb,EAASO,GAAaA,EAAS,OAAQyF,GAAMA,EAAE,SAAWnF,EAAQ,MAAM,CAAC,MACpE,CACL,MAAMoF,EAAepF,EAAQ,YAAc,IAAM,IAAM,IACvDb,EAASO,GACPA,EAAS,IAAKyF,GACZA,EAAE,SAAWnF,EAAQ,OACjB,CAAE,GAAGmF,EAAG,UAAWC,EAAc,UAAWA,IAAiB,IAAM,IAAMD,EAAE,WAC3EA,CAAA,CACN,CACF,CACF,EACC,CAAC,CAAA,EAGAE,GAAa,MAAO,GAAM,CAC9B,EAAE,eAAA,EACF,MAAMC,EAAcjE,EAAK,OAAQ1B,GAC9BA,EAAI,YAAc,KAAOA,EAAI,UAAY,KACzCA,EAAI,UAAY,KAChBA,EAAI,YAAc,KAAOA,EAAI,YAAc,GAAA,EAE9C,GAAI2F,EAAY,SAAW,EAAG,CAC5B7F,EAAc,gBAAgB,EAC9B,MAAA,CAEF2B,EAAW,EAAI,EACf,GAAI,CACF,MAAMmE,EAAWD,EAAY,IAAI,MAAO3F,GAAQ,CAC9C,IAAI6F,EAAS,GACT7F,EAAI,YAAc,KAAOA,EAAI,UAAY,IAC3C6F,EAAS,IACA7F,EAAI,UAAY,IACzB6F,EAAS,IACA7F,EAAI,YAAc,KAAOA,EAAI,YAAc,MACpD6F,EAAS,KAEX,MAAMrC,EAAS,CACb,OAAAqC,EACA,QAAS7F,EAAI,OACb,QAASA,EAAI,QAAU,GACvB,aAAcA,EAAI,aAAe,GACjC,KAAMA,EAAI,KAAO,GACjB,WAAY,OAAOA,EAAI,SAAS,GAAK,IACrC,WAAY,OAAOA,EAAI,SAAS,GAAK,GACrC,OAAQA,EAAI,OAAS,GAAA,EAEvB,GAAI,CACF,MAAMyD,EAAW,MAAMC,EAAU,oBAAqBF,CAAO,EAC7D,GAAI,CAACC,EAAS,QACZ,MAAM,IAAI,MAAMA,EAAS,SAAW,aAAaoC,CAAM,SAAS7F,EAAI,MAAM,EAAE,EAE9E,MAAO,CAAE,GAAGA,EAAK,QAAS,EAAA,CAAK,OACxB8F,EAAO,CACd,eAAQ,MAAM,oBAAoBD,CAAM,gBAAgB7F,EAAI,MAAM,GAAI8F,CAAK,EACpE,CAAE,GAAG9F,EAAK,QAAS,GAAO,MAAO8F,EAAM,OAAA,CAAQ,CACxD,CACD,EAEKC,GADU,MAAM,QAAQ,IAAIH,CAAQ,GACnB,OAAQI,GAAW,CAACA,EAAO,OAAO,EACrDD,EAAO,OAAS,EAClBjG,EAAc,kBAAkBiG,EAAO,IAAKE,GAAMA,EAAE,KAAK,EAAE,KAAK,IAAI,CAAC,EAAE,GAEvEC,GAAS,yBAAyB,EAClC,MAAM3C,EAAA,EACR,OACOO,EAAK,CACZ,QAAQ,MAAM,yBAA0BA,CAAG,EAC3ChE,EAAcgE,EAAI,SAAW,kBAAkB,CAAA,QACjD,CACErC,EAAW,EAAK,CAAA,CAClB,EAGF,OACE0E,EAAAA,KAAC,MAAA,CAAI,UAAWlD,EAAO,UACrB,SAAA,CAAAmD,EAAAA,IAACC,GAAA,CACC,OAAQtF,EACR,QAAAE,EACA,WAAAC,EACA,QAASyD,EAAA,CAAA,EAEXyB,EAAAA,IAACE,GAAA,CACC,aAActF,EACd,QAASM,EACT,WAAYC,EACZ,SAAAkB,EACA,gBAAiB,IAAM8D,GAAoB9G,EAAc,QAASoC,EAAa,WAAW,EAC1F,aAAcoB,EAEd,SAAAkD,EAAAA,KAAC,MAAA,CAAI,UAAWlD,EAAO,eACrB,SAAA,CAAAmD,EAAAA,IAAC,SAAA,CAAO,UAAW,GAAGnD,EAAO,GAAG,mBAAoB,QAAS4B,GAAgB,SAAA,IAAA,CAE7E,EACAuB,EAAAA,IAAC,UAAO,UAAW,GAAGnD,EAAO,GAAG,mBAAoB,QAASyC,GAAY,SAAA,IAAA,CAEzE,CAAA,CAAA,CACF,CAAA,CAAA,EAEFS,EAAAA,KAAC,MAAA,CAAI,UAAWlD,EAAO,aACpB,SAAA,CAAApB,IAAgB,gBAAkBuE,EAAAA,IAAC,MAAA,CAAI,SAAA,WAAQ,EAC/C5E,GAAW4E,EAAAA,IAAC,MAAA,CAAI,SAAA,SAAA,CAAO,EACxBA,EAAAA,IAAC,MAAA,CACC,IAAKzD,EACL,UAAWM,EAAO,aAClB,MAAO,CAAE,WAAYzB,GAAWK,IAAgB,QAAU,SAAW,SAAA,CAAU,CAAA,CACjF,EACF,EACAsE,EAAAA,KAACK,EAAA,CACC,KAAMzE,EACN,OAAQoD,GACR,UAAWL,GACX,MAAM,QAEN,SAAA,CAAAqB,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,aAAa,SAAA,MAAG,EACjCA,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,UAAW,gBAAgBnD,EAAO,WAAW,GAC7C,MAAOZ,EAAQ,OACf,SAAW,GAAMC,EAAW,CAAE,GAAGD,EAAS,OAAQ,EAAE,OAAO,MAAO,EAClE,YAAY,YAAA,CAAA,CACd,EACF,EACA8D,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,aAAa,SAAA,OAAI,EAClCD,EAAAA,KAAC,SAAA,CACC,UAAW,eAAelD,EAAO,UAAU,GAC3C,MAAOZ,EAAQ,YACf,SAAW,GAAM,CACf,MAAMoE,EAAc,EAAE,OAAO,MACvBnB,EAAWmB,EACb5C,EAAmB,CAAE,YAAa4C,EAAa,OAAQ,MAAA,EAAU/E,CAAI,EACrE,EACJY,EAAW,CAAE,GAAGD,EAAS,YAAaoE,EAAa,UAAW,OAAOnB,CAAQ,EAAG,CAAA,EAGlF,SAAA,CAAAc,EAAAA,IAAC,SAAA,CAAO,MAAM,GAAG,SAAA,KAAE,EAClB1E,EACE,OAAQ1B,GAAQA,EAAI,SAAWqC,EAAQ,MAAM,EAC7C,IAAKrC,SACH,SAAA,CAAwB,MAAOA,EAAI,OACjC,SAAAI,EAAeJ,EAAI,OAAQA,EAAI,SAAS,GAD9BA,EAAI,MAEjB,CACD,CAAA,CAAA,CAAA,CACL,EACF,EACAmG,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,aAAa,SAAA,MAAG,EACjCA,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,UAAW,gBAAgBnD,EAAO,WAAW,GAC7C,MAAOZ,EAAQ,IACf,SAAW,GAAMC,EAAW,CAAE,GAAGD,EAAS,IAAK,EAAE,OAAO,MAAO,EAC/D,YAAY,YAAA,CAAA,CACd,EACF,EACA8D,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,aAAa,SAAA,OAAI,EAClCA,EAAAA,IAAC,QAAA,CACC,KAAK,SACL,UAAW,gBAAgBnD,EAAO,WAAW,GAC7C,MAAOZ,EAAQ,UACf,SAAW,GAAMC,EAAW,CAAE,GAAGD,EAAS,UAAW,EAAE,OAAO,MAAO,EACrE,YAAY,cAAA,CAAA,CACd,EACF,EACA8D,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,aAAa,SAAA,OAAI,EAClCD,EAAAA,KAAC,SAAA,CACC,UAAW,eAAelD,EAAO,UAAU,GAC3C,MAAOZ,EAAQ,WACf,SAAW,GAAMC,EAAW,CAAE,GAAGD,EAAS,WAAY,EAAE,OAAO,MAAO,EAEtE,SAAA,CAAA+D,EAAAA,IAAC,SAAA,CAAO,MAAM,IAAI,SAAA,IAAC,EACnBA,EAAAA,IAAC,SAAA,CAAO,MAAM,IAAI,SAAA,GAAA,CAAC,CAAA,CAAA,CAAA,CACrB,EACF,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,aAAa,SAAA,KAAE,EAChCD,EAAAA,KAAC,SAAA,CACC,UAAW,eAAelD,EAAO,UAAU,GAC3C,MAAOZ,EAAQ,MACf,SAAW,GAAMC,EAAW,CAAE,GAAGD,EAAS,MAAO,EAAE,OAAO,MAAO,EAEjE,SAAA,CAAA+D,EAAAA,IAAC,SAAA,CAAO,MAAM,IAAI,SAAA,IAAC,EACnBA,EAAAA,IAAC,SAAA,CAAO,MAAM,IAAI,SAAA,GAAA,CAAC,CAAA,CAAA,CAAA,CACrB,CAAA,CACF,CAAA,CAAA,CAAA,EAEFA,EAAAA,IAACI,EAAA,CACC,KAAMvE,EACN,OAAQsD,GACR,UAAWH,GACX,MAAM,UAEN,SAAAe,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,aAAa,SAAA,OAAI,EAClCD,EAAAA,KAAC,SAAA,CACC,UAAW,eAAelD,EAAO,UAAU,GAC3C,MAAOZ,EAAQ,YACf,SAAW,GAAMC,EAAW,CAAE,GAAGD,EAAS,YAAa,EAAE,OAAO,MAAO,EAEvE,SAAA,CAAA+D,EAAAA,IAAC,SAAA,CAAO,MAAM,GAAG,SAAA,KAAE,EAClB1E,EACE,OAAQ1B,GAAQA,EAAI,SAAWmC,CAAc,EAC7C,IAAKnC,GACJoG,EAAAA,IAAC,UAAwB,MAAOpG,EAAI,OACjC,SAAAI,EAAeJ,EAAI,OAAQA,EAAI,SAAS,GAD9BA,EAAI,MAEjB,CACD,CAAA,CAAA,CAAA,CACL,CAAA,CACF,CAAA,CAAA,CACF,EACF,CAEJ"}