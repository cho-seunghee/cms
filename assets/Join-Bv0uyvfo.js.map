{"version":3,"file":"Join-Bv0uyvfo.js","sources":["../../src/pages/user/Join.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport commonUtils from '../../utils/common.js';\nimport { fetchData } from '../../utils/dataUtils';\nimport { msgPopup } from '../../utils/msgPopup';\nimport { errorMsgPopup } from '../../utils/errorMsgPopup';\nimport styles from './Join.module.css';\n\nconst Join = ({ show, onHide }) => {\n  const [empNo, setEmpNo] = useState('');\n  const [empNm, setEmpNm] = useState('');\n  const [empPwd, setEmpPwd] = useState('');\n  const [confirmPwd, setConfirmPwd] = useState('');\n  const [phone, setPhone] = useState('');\n  const [mobile, setMobile] = useState('');\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (show) {\n      setEmpNo('');\n      setEmpNm('');\n      setEmpPwd('');\n      setConfirmPwd('');\n      setPhone('');\n      setMobile('');\n      setEmail('');\n    }\n  }, [show]);\n\n  const validateForm = () => {\n    if (!empNo || !empNm || !empPwd || !confirmPwd || !mobile || !email) {\n      return \"필수 입력 항목을 모두 채워주세요.\";\n    }\n\n    const empNoValidation = commonUtils.validateVarcharLength(empNo, 20, '아이디');\n    if (!empNoValidation.valid) return empNoValidation.error;\n\n    const empNmValidation = commonUtils.validateVarcharLength(empNm, 50, '이름');\n    if (!empNmValidation.valid) return empNmValidation.error;\n\n    const phoneValidation = commonUtils.validateVarcharLength(phone, 20, '전화번호');\n    if (!phoneValidation.valid) return phoneValidation.error;\n\n    const mobileValidation = commonUtils.validateVarcharLength(mobile, 20, '핸드폰번호');\n    if (!mobileValidation.valid) return mobileValidation.error;\n\n    const emailValidation = commonUtils.validateVarcharLength(email, 50, '이메일');\n    if (!emailValidation.valid) return emailValidation.error;\n\n    if (empPwd.length < 6) {\n      return \"비밀번호는 최소 6자 이상이어야 합니다.\";\n    }\n\n    if (empPwd !== confirmPwd) {\n      return \"비밀번호와 비밀번호 확인이 일치하지 않습니다.\";\n    }\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (email && !emailRegex.test(email)) {\n      return \"유효한 이메일 형식이 아닙니다.\";\n    }\n\n    const phoneRegex = /^(\\d{2,3})-(\\d{3,4})-(\\d{3,4})$/;\n    if (phone && !phoneRegex.test(phone)) {\n      return \"전화번호 형식이 올바르지 않습니다. (예: 02-1234-5678, 031-7777-7777)\";\n    }\n    if (mobile && !phoneRegex.test(mobile)) {\n      return \"핸드폰번호 형식이 올바르지 않습니다. (예: 010-1234-5678, 010-7777-7777)\";\n    }\n\n    return '';\n  };\n\n  const handleRegistration = async (e) => {\n    e.preventDefault();\n\n    const validationError = validateForm();\n    if (validationError) {\n      errorMsgPopup(validationError);\n      return;\n    }\n\n    const userData = {\n      pGUBUN: 'I',\n      pEMPNO: empNo,\n      pEMPNM: empNm,\n      pEMPPWD: empPwd,\n      pPHONE: phone || '',\n      pMOBILE: mobile,\n      pEMAIL: email\n    };\n\n    try {\n      const response = await fetchData('auth/join/save', userData);\n\n      if (!response.success) {\n        throw new Error(response.errMsg || '가입정보가 잘못되었습니다.');\n      } else {\n        if (response.errMsg !== '' || response.data[0].ERRCD !== '00') {\n          let errMsg = response.errMsg;\n\n          if (response.data[0].ERRMSG !== '') errMsg = response.data[0].ERRMSG;\n\n          errorMsgPopup(errMsg);\n        } else {\n          msgPopup(\"가입되었습니다.\");\n          navigate('/login');\n          onHide();\n        }\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      errorMsgPopup(error.message || '가입 중 오류가 발생했습니다. 다시 시도해주세요.');\n    }\n  };\n\n  if (!show) return null;\n\n  return (\n    <>\n      <div className={styles.overlay} onClick={onHide}></div>\n      <div className={`${styles.modal} show d-block`} tabIndex=\"-1\">\n        <div className={`${styles.modalDialog} modal-dialog-centered`}>\n          <div className={`${styles.modalContent} modal-content`}>\n            <div className={`${styles.modalHeader} modal-header`}>\n              <h5 className={`${styles.modalTitle} modal-title`}>회원 가입</h5>\n              <button type=\"button\" className={`${styles.btnClose} btn-close`} onClick={onHide}></button>\n            </div>\n            <div className={`${styles.modalBody} modal-body`}>\n              <form onSubmit={handleRegistration}>\n                <div className={styles.formRow}>\n                  <div className={styles.formGroup}>\n                    <label htmlFor=\"empNo\" className=\"form-label\">\n                      <i className=\"bi bi-person me-2\"></i>아이디 <i className=\"bi bi-asterisk text-danger\"></i>\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"empNo\"\n                      value={empNo}\n                      onChange={(e) => setEmpNo(e.target.value)}\n                      required\n                      placeholder=\"아이디를 입력하세요\"\n                    />\n                  </div>\n                  <div className={styles.formGroup}>\n                    <label htmlFor=\"empNm\" className=\"form-label\">\n                      <i className=\"bi bi-person-fill me-2\"></i>이름 <i className=\"bi bi-asterisk text-danger\"></i>\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"empNm\"\n                      value={empNm}\n                      onChange={(e) => setEmpNm(e.target.value)}\n                      required\n                      placeholder=\"이름을 입력하세요\"\n                    />\n                  </div>\n                </div>\n                <div className={styles.formRow}>\n                  <div className={styles.formGroup}>\n                    <label htmlFor=\"empPwd\" className=\"form-label\">\n                      <i className=\"bi bi-lock me-2\"></i>비밀번호 <i className=\"bi bi-asterisk text-danger\"></i>\n                    </label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      id=\"empPwd\"\n                      value={empPwd}\n                      onChange={(e) => setEmpPwd(e.target.value)}\n                      required\n                      placeholder=\"비밀번호를 입력하세요\"\n                    />\n                  </div>\n                  <div className={styles.formGroup}>\n                    <label htmlFor=\"confirmPwd\" className=\"form-label\">\n                      <i className=\"bi bi-lock-fill me-2\"></i>비밀번호 확인 <i className=\"bi bi-asterisk text-danger\"></i>\n                    </label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      id=\"confirmPwd\"\n                      value={confirmPwd}\n                      onChange={(e) => setConfirmPwd(e.target.value)}\n                      required\n                      placeholder=\"비밀번호를 입력하세요\"\n                    />\n                  </div>\n                </div>\n                <div className={styles.formRow}>\n                  <div className={styles.formGroup}>\n                    <label htmlFor=\"phone\" className=\"form-label\">\n                      <i className=\"bi bi-telephone me-2\"></i>전화번호\n                    </label>\n                    <input\n                      type=\"tel\"\n                      className=\"form-control\"\n                      id=\"phone\"\n                      value={phone}\n                      onChange={(e) => setPhone(e.target.value)}\n                      placeholder=\"(예: 02-1234-5678)\"\n                    />\n                  </div>\n                  <div className={styles.formGroup}>\n                    <label htmlFor=\"mobile\" className=\"form-label\">\n                      <i className=\"bi bi-phone me-2\"></i>핸드폰번호 <i className=\"bi bi-asterisk text-danger\"></i>\n                    </label>\n                    <input\n                      type=\"tel\"\n                      className=\"form-control\"\n                      id=\"mobile\"\n                      value={mobile}\n                      onChange={(e) => setMobile(e.target.value)} // Fixed typo: setPhone -> setMobile\n                      required\n                      placeholder=\"(예: 010-1234-5678)\"\n                    />\n                  </div>\n                </div>\n                <div className={styles.formRow}>\n                  <div className={styles.formGroup}>\n                    <label htmlFor=\"email\" className=\"form-label\">\n                      <i className=\"bi bi-envelope me-2\"></i>이메일 <i className=\"bi bi-asterisk text-danger\"></i>\n                    </label>\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      id=\"email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      required\n                      placeholder=\"이메일을 입력하세요\"\n                    />\n                  </div>\n                  <div className={styles.formGroup}>\n                    {/* Empty div to maintain layout balance */}\n                  </div>\n                </div>\n                <button type=\"submit\" className={`${styles.btn} w-100 mt-3`}>\n                  <i className=\"bi bi-person-plus me-2\"></i>가입\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Join;"],"names":["Join","show","onHide","empNo","setEmpNo","useState","empNm","setEmpNm","empPwd","setEmpPwd","confirmPwd","setConfirmPwd","phone","setPhone","mobile","setMobile","email","setEmail","navigate","useNavigate","useEffect","validateForm","empNoValidation","commonUtils","empNmValidation","phoneValidation","mobileValidation","emailValidation","phoneRegex","handleRegistration","e","validationError","errorMsgPopup","userData","response","fetchData","errMsg","msgPopup","error","jsxs","Fragment","jsx","styles"],"mappings":"wMAQA,MAAMA,EAAO,CAAC,CAAE,KAAAC,EAAM,OAAAC,KAAa,CACjC,KAAM,CAACC,EAAOC,CAAQ,EAAIC,EAAAA,SAAS,EAAE,EAC/B,CAACC,EAAOC,CAAQ,EAAIF,EAAAA,SAAS,EAAE,EAC/B,CAACG,EAAQC,CAAS,EAAIJ,EAAAA,SAAS,EAAE,EACjC,CAACK,EAAYC,CAAa,EAAIN,EAAAA,SAAS,EAAE,EACzC,CAACO,EAAOC,CAAQ,EAAIR,EAAAA,SAAS,EAAE,EAC/B,CAACS,EAAQC,CAAS,EAAIV,EAAAA,SAAS,EAAE,EACjC,CAACW,EAAOC,CAAQ,EAAIZ,EAAAA,SAAS,EAAE,EAC/Ba,EAAWC,EAAA,EAEjBC,EAAAA,UAAU,IAAM,CACVnB,IACFG,EAAS,EAAE,EACXG,EAAS,EAAE,EACXE,EAAU,EAAE,EACZE,EAAc,EAAE,EAChBE,EAAS,EAAE,EACXE,EAAU,EAAE,EACZE,EAAS,EAAE,EACb,EACC,CAAChB,CAAI,CAAC,EAET,MAAMoB,EAAe,IAAM,CACzB,GAAI,CAAClB,GAAS,CAACG,GAAS,CAACE,GAAU,CAACE,GAAc,CAACI,GAAU,CAACE,EAC5D,MAAO,sBAGT,MAAMM,EAAkBC,EAAY,sBAAsBpB,EAAO,GAAI,KAAK,EAC1E,GAAI,CAACmB,EAAgB,MAAO,OAAOA,EAAgB,MAEnD,MAAME,EAAkBD,EAAY,sBAAsBjB,EAAO,GAAI,IAAI,EACzE,GAAI,CAACkB,EAAgB,MAAO,OAAOA,EAAgB,MAEnD,MAAMC,EAAkBF,EAAY,sBAAsBX,EAAO,GAAI,MAAM,EAC3E,GAAI,CAACa,EAAgB,MAAO,OAAOA,EAAgB,MAEnD,MAAMC,EAAmBH,EAAY,sBAAsBT,EAAQ,GAAI,OAAO,EAC9E,GAAI,CAACY,EAAiB,MAAO,OAAOA,EAAiB,MAErD,MAAMC,EAAkBJ,EAAY,sBAAsBP,EAAO,GAAI,KAAK,EAC1E,GAAI,CAACW,EAAgB,MAAO,OAAOA,EAAgB,MAEnD,GAAInB,EAAO,OAAS,EAClB,MAAO,yBAGT,GAAIA,IAAWE,EACb,MAAO,4BAIT,GAAIM,GAAS,CADM,6BACM,KAAKA,CAAK,EACjC,MAAO,oBAGT,MAAMY,EAAa,kCACnB,OAAIhB,GAAS,CAACgB,EAAW,KAAKhB,CAAK,EAC1B,uDAELE,GAAU,CAACc,EAAW,KAAKd,CAAM,EAC5B,yDAGF,EAAA,EAGHe,EAAqB,MAAOC,GAAM,CACtCA,EAAE,eAAA,EAEF,MAAMC,EAAkBV,EAAA,EACxB,GAAIU,EAAiB,CACnBC,EAAcD,CAAe,EAC7B,MAAA,CAGF,MAAME,EAAW,CACf,OAAQ,IACR,OAAQ9B,EACR,OAAQG,EACR,QAASE,EACT,OAAQI,GAAS,GACjB,QAASE,EACT,OAAQE,CAAA,EAGV,GAAI,CACF,MAAMkB,EAAW,MAAMC,EAAU,iBAAkBF,CAAQ,EAE3D,GAAKC,EAAS,QAGZ,GAAIA,EAAS,SAAW,IAAMA,EAAS,KAAK,CAAC,EAAE,QAAU,KAAM,CAC7D,IAAIE,EAASF,EAAS,OAElBA,EAAS,KAAK,CAAC,EAAE,SAAW,KAAIE,EAASF,EAAS,KAAK,CAAC,EAAE,QAE9DF,EAAcI,CAAM,CAAA,MAEpBC,EAAS,UAAU,EACnBnB,EAAS,QAAQ,EACjBhB,EAAA,MAXF,OAAM,IAAI,MAAMgC,EAAS,QAAU,gBAAgB,CAarD,OACOI,EAAO,CACd,QAAQ,MAAM,sBAAuBA,CAAK,EAC1CN,EAAcM,EAAM,SAAW,6BAA6B,CAAA,CAC9D,EAGF,OAAKrC,EAGHsC,EAAAA,KAAAC,WAAA,CACE,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAWC,EAAO,QAAS,QAASxC,EAAQ,EACjDuC,EAAAA,IAAC,OAAI,UAAW,GAAGC,EAAO,KAAK,gBAAiB,SAAS,KACvD,SAAAD,EAAAA,IAAC,MAAA,CAAI,UAAW,GAAGC,EAAO,WAAW,yBACnC,SAAAH,EAAAA,KAAC,OAAI,UAAW,GAAGG,EAAO,YAAY,iBACpC,SAAA,CAAAH,OAAC,MAAA,CAAI,UAAW,GAAGG,EAAO,WAAW,gBACnC,SAAA,CAAAD,EAAAA,IAAC,MAAG,UAAW,GAAGC,EAAO,UAAU,eAAgB,SAAA,QAAK,EACxDD,EAAAA,IAAC,SAAA,CAAO,KAAK,SAAS,UAAW,GAAGC,EAAO,QAAQ,aAAc,QAASxC,CAAA,CAAQ,CAAA,EACpF,EACAuC,EAAAA,IAAC,MAAA,CAAI,UAAW,GAAGC,EAAO,SAAS,cACjC,SAAAH,EAAAA,KAAC,OAAA,CAAK,SAAUV,EACd,SAAA,CAAAU,EAAAA,KAAC,MAAA,CAAI,UAAWG,EAAO,QACrB,SAAA,CAAAH,EAAAA,KAAC,MAAA,CAAI,UAAWG,EAAO,UACrB,SAAA,CAAAH,EAAAA,KAAC,QAAA,CAAM,QAAQ,QAAQ,UAAU,aAC/B,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAE,UAAU,mBAAA,CAAoB,EAAI,OAAIA,EAAAA,IAAC,IAAA,CAAE,UAAU,4BAAA,CAA6B,CAAA,EACrF,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,UAAU,eACV,GAAG,QACH,MAAOtC,EACP,SAAW2B,GAAM1B,EAAS0B,EAAE,OAAO,KAAK,EACxC,SAAQ,GACR,YAAY,YAAA,CAAA,CACd,EACF,EACAS,EAAAA,KAAC,MAAA,CAAI,UAAWG,EAAO,UACrB,SAAA,CAAAH,EAAAA,KAAC,QAAA,CAAM,QAAQ,QAAQ,UAAU,aAC/B,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAA,CAAyB,EAAI,MAAGA,EAAAA,IAAC,IAAA,CAAE,UAAU,4BAAA,CAA6B,CAAA,EACzF,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,UAAU,eACV,GAAG,QACH,MAAOnC,EACP,SAAWwB,GAAMvB,EAASuB,EAAE,OAAO,KAAK,EACxC,SAAQ,GACR,YAAY,WAAA,CAAA,CACd,CAAA,CACF,CAAA,EACF,EACAS,EAAAA,KAAC,MAAA,CAAI,UAAWG,EAAO,QACrB,SAAA,CAAAH,EAAAA,KAAC,MAAA,CAAI,UAAWG,EAAO,UACrB,SAAA,CAAAH,EAAAA,KAAC,QAAA,CAAM,QAAQ,SAAS,UAAU,aAChC,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAE,UAAU,iBAAA,CAAkB,EAAI,QAAKA,EAAAA,IAAC,IAAA,CAAE,UAAU,4BAAA,CAA6B,CAAA,EACpF,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,UAAU,eACV,GAAG,SACH,MAAOjC,EACP,SAAWsB,GAAMrB,EAAUqB,EAAE,OAAO,KAAK,EACzC,SAAQ,GACR,YAAY,aAAA,CAAA,CACd,EACF,EACAS,EAAAA,KAAC,MAAA,CAAI,UAAWG,EAAO,UACrB,SAAA,CAAAH,EAAAA,KAAC,QAAA,CAAM,QAAQ,aAAa,UAAU,aACpC,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAE,UAAU,sBAAA,CAAuB,EAAI,WAAQA,EAAAA,IAAC,IAAA,CAAE,UAAU,4BAAA,CAA6B,CAAA,EAC5F,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,UAAU,eACV,GAAG,aACH,MAAO/B,EACP,SAAWoB,GAAMnB,EAAcmB,EAAE,OAAO,KAAK,EAC7C,SAAQ,GACR,YAAY,aAAA,CAAA,CACd,CAAA,CACF,CAAA,EACF,EACAS,EAAAA,KAAC,MAAA,CAAI,UAAWG,EAAO,QACrB,SAAA,CAAAH,EAAAA,KAAC,MAAA,CAAI,UAAWG,EAAO,UACrB,SAAA,CAAAH,EAAAA,KAAC,QAAA,CAAM,QAAQ,QAAQ,UAAU,aAC/B,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAE,UAAU,sBAAA,CAAuB,EAAI,MAAA,EAC1C,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,MACL,UAAU,eACV,GAAG,QACH,MAAO7B,EACP,SAAWkB,GAAMjB,EAASiB,EAAE,OAAO,KAAK,EACxC,YAAY,mBAAA,CAAA,CACd,EACF,EACAS,EAAAA,KAAC,MAAA,CAAI,UAAWG,EAAO,UACrB,SAAA,CAAAH,EAAAA,KAAC,QAAA,CAAM,QAAQ,SAAS,UAAU,aAChC,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAE,UAAU,kBAAA,CAAmB,EAAI,SAAMA,EAAAA,IAAC,IAAA,CAAE,UAAU,4BAAA,CAA6B,CAAA,EACtF,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,MACL,UAAU,eACV,GAAG,SACH,MAAO3B,EACP,SAAWgB,GAAMf,EAAUe,EAAE,OAAO,KAAK,EACzC,SAAQ,GACR,YAAY,oBAAA,CAAA,CACd,CAAA,CACF,CAAA,EACF,EACAS,EAAAA,KAAC,MAAA,CAAI,UAAWG,EAAO,QACrB,SAAA,CAAAH,EAAAA,KAAC,MAAA,CAAI,UAAWG,EAAO,UACrB,SAAA,CAAAH,EAAAA,KAAC,QAAA,CAAM,QAAQ,QAAQ,UAAU,aAC/B,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAE,UAAU,qBAAA,CAAsB,EAAI,OAAIA,EAAAA,IAAC,IAAA,CAAE,UAAU,4BAAA,CAA6B,CAAA,EACvF,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,QACL,UAAU,eACV,GAAG,QACH,MAAOzB,EACP,SAAWc,GAAMb,EAASa,EAAE,OAAO,KAAK,EACxC,SAAQ,GACR,YAAY,YAAA,CAAA,CACd,EACF,EACAW,EAAAA,IAAC,MAAA,CAAI,UAAWC,EAAO,SAAA,CAEvB,CAAA,EACF,EACAH,EAAAA,KAAC,UAAO,KAAK,SAAS,UAAW,GAAGG,EAAO,GAAG,cAC5C,SAAA,CAAAD,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAA,CAAyB,EAAI,IAAA,CAAA,CAC5C,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,EACF,CAAA,CACF,CAAA,EACF,EAlIgB,IAoIpB"}